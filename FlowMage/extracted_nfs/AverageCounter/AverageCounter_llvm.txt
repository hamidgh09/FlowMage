define dso_local void @_ZN14AverageCounterC2Ev(%class.AverageCounter* %0) unnamed_addr #2 align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i8 0, i8* %4, align 4, !tbaa !20277
  %5 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 0
  %6 = getelementptr inbounds %"class.Element::Port", %"class.Element::Port"* %5, i64 0, i32 0
  store %class.Element* null, %class.Element** %6, align 8, !tbaa !20278
  %7 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 0, i32 1
  store i32 -2, i32* %7, align 8, !tbaa !20280
  %8 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 1, i32 0
  store %class.Element* null, %class.Element** %8, align 8, !tbaa !20278
  %9 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 1, i32 1
  store i32 -2, i32* %9, align 8, !tbaa !20280
  %10 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 2, i32 0
  store %class.Element* null, %class.Element** %10, align 8, !tbaa !20278
  %11 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 2, i32 1
  store i32 -2, i32* %11, align 8, !tbaa !20280
  %12 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 3, i32 0
  store %class.Element* null, %class.Element** %12, align 8, !tbaa !20278
  %13 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 3, i32 1
  store i32 -2, i32* %13, align 8, !tbaa !20280
  %14 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 7
  store %class.Router* null, %class.Router** %14, align 8, !tbaa !20281
  %15 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 8
  store i32 -1, i32* %15, align 8, !tbaa !20282
  %16 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 10
  %17 = bitcast %class.Vector* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(17) %17, i8 0, i64 17, i1 false) #34
  %18 = load i32, i32* @_ZN7Element19nelements_allocatedE, align 4, !tbaa !20283
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* @_ZN7Element19nelements_allocatedE, align 4, !tbaa !20283
  %20 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 4, i64 1
  store %"class.Element::Port"* %5, %"class.Element::Port"** %20, align 8, !tbaa !20284
  %21 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 4, i64 0
  store %"class.Element::Port"* %5, %"class.Element::Port"** %21, align 8, !tbaa !20284
  %22 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i64 1
  store i32 0, i32* %22, align 4, !tbaa !20283
  %23 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i64 0
  store i32 0, i32* %23, align 8, !tbaa !20283
  store i32 1, i32* %3, align 8, !tbaa !20267
  %24 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 2
  %25 = bitcast %"struct.TimestampAccumBase<per_thread>::State"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %25, i8 0, i64 32, i1 false) #34
  %26 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 1
  store i8 1, i8* %26, align 1, !tbaa !25099
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*] }, { [39 x i8*] }* @_ZTV14AverageCounter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !20285
  ret void
}

define internal void @_ZN14AverageCounterD0Ev(%class.AverageCounter* %0) unnamed_addr #7 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*] }, { [38 x i8*] }* @_ZTV7Element, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !20285
  %3 = load i32, i32* @_ZN7Element19nelements_allocatedE, align 4, !tbaa !20283
  %4 = add nsw i32 %3, -1
  store i32 %4, i32* @_ZN7Element19nelements_allocatedE, align 4, !tbaa !20283
  %5 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 4, i64 0
  %6 = load %"class.Element::Port"*, %"class.Element::Port"** %5, align 8, !tbaa !20284
  %7 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 0
  %8 = icmp uge %"class.Element::Port"* %6, %7
  %9 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %10 = bitcast [2 x i32]* %9 to %"class.Element::Port"*
  %11 = icmp ule %"class.Element::Port"* %6, %10
  %12 = and i1 %11, %8
  %13 = icmp eq %"class.Element::Port"* %6, null
  %14 = or i1 %13, %12
  br i1 %14, label %17, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.Element::Port"* %6 to i8*
  tail call void @_ZdaPv(i8* %16) #55
  br label %17

17:                                               ; preds = %15, %1
  %18 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 4, i64 1
  %19 = load %"class.Element::Port"*, %"class.Element::Port"** %18, align 8, !tbaa !20284
  %20 = icmp uge %"class.Element::Port"* %19, %7
  %21 = icmp ule %"class.Element::Port"* %19, %10
  %22 = and i1 %21, %20
  %23 = icmp eq %"class.Element::Port"* %19, null
  %24 = or i1 %23, %22
  br i1 %24, label %27, label %25

25:                                               ; preds = %17
  %26 = bitcast %"class.Element::Port"* %19 to i8*
  tail call void @_ZdaPv(i8* %26) #55
  br label %27

27:                                               ; preds = %25, %17
  %28 = getelementptr inbounds %class.AverageCounter, %class.AverageCounter* %0, i64 0, i32 0, i32 0, i32 0, i32 10
  %29 = bitcast %class.Vector* %28 to i8**
  %30 = load i8*, i8** %29, align 8, !tbaa !20288
  %31 = icmp eq i8* %30, null
  br i1 %31, label %_ZN12BatchElementD2Ev.exit, label %32

32:                                               ; preds = %27
  tail call void @_ZdaPv(i8* nonnull %30) #55
  br label %_ZN12BatchElementD2Ev.exit

_ZN12BatchElementD2Ev.exit:                       ; preds = %32, %27
  ret void
}

define weak_odr dso_local %class.Packet* @_ZN18AverageCounterBaseI19AverageCounterStatsImEE13simple_actionEP6Packet(%class.AverageCounterBase* %0, %class.Packet* %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %struct.timespec, align 8
  %4 = bitcast %struct.timespec* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #34
  %5 = call i32 @clock_gettime(i32 1, %struct.timespec* nonnull %3) #34
  %6 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i64 0, i32 0
  %7 = load i64, i64* %6, align 8, !tbaa !20557
  %8 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i64 0, i32 1
  %9 = load i64, i64* %8, align 8, !tbaa !20559
  %10 = shl i64 %7, 32
  %11 = ashr exact i64 %10, 32
  %12 = mul nsw i64 %11, 1000000000
  %13 = and i64 %9, 4294967295
  %14 = add nsw i64 %12, %13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #34
  %15 = sdiv i64 %14, 1000000
  %16 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 2, i32 2
  %17 = load i64, i64* %16, align 8, !tbaa !25102
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %2
  store i64 %15, i64* %16, align 8, !tbaa !25102
  br label %20

20:                                               ; preds = %19, %2
  %21 = phi i64 [ %15, %19 ], [ %17, %2 ]
  %22 = sub i64 %15, %21
  %23 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 3
  %24 = load i64, i64* %23, align 8, !tbaa !25103
  %25 = icmp ult i64 %22, %24
  br i1 %25, label %40, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %class.Packet, %class.Packet* %1, i64 0, i32 4
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8, !tbaa !20396
  %30 = getelementptr inbounds %class.Packet, %class.Packet* %1, i64 0, i32 3
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8, !tbaa !20399
  %33 = sub i64 %29, %32
  %34 = and i64 %33, 4294967295
  %35 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 2, i32 0
  %36 = bitcast i64* %35 to <2 x i64>*
  %37 = load <2 x i64>, <2 x i64>* %36, align 8, !tbaa !20341
  %38 = insertelement <2 x i64> <i64 1, i64 undef>, i64 %34, i32 1
  %39 = add <2 x i64> %37, %38
  store <2 x i64> %39, <2 x i64>* %36, align 8, !tbaa !20341
  br label %40

40:                                               ; preds = %26, %20
  %41 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 2, i32 3
  store i64 %15, i64* %41, align 8, !tbaa !25104
  ret %class.Packet* %1
}

define internal i8* @_ZNK14AverageCounter10class_nameEv(%class.AverageCounter* nocapture readnone %0) unnamed_addr #4 comdat align 2 {
  ret i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.222.13226, i64 0, i64 0)
}

define weak_odr dso_local i8* @_ZNK18AverageCounterBaseI19AverageCounterStatsImEE10port_countEv(%class.AverageCounterBase* %0) unnamed_addr #2 comdat align 2 {
  ret i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZN7Element9PORTS_1_1E, i64 0, i64 0)
}

define weak_odr dso_local i32 @_ZN18AverageCounterBaseI19AverageCounterStatsImEE9configureER6VectorI6StringLm16EEP12ErrorHandler(%class.AverageCounterBase* %0, %class.Vector.0* dereferenceable(16) %1, %class.ErrorHandler* %2) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca double, align 8
  %7 = alloca %class.Args, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #34
  store i32 0, i32* %4, align 4, !tbaa !20283
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #34
  store i32 0, i32* %5, align 4, !tbaa !20283
  %12 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #34
  store double 0.000000e+00, double* %6, align 8, !tbaa !21519
  %13 = bitcast %class.Args* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %13) #34
  %14 = bitcast %class.Args* %7 to %class.AverageCounterBase**
  store %class.AverageCounterBase* %0, %class.AverageCounterBase** %14, align 8, !tbaa !20294
  %15 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 0, i32 1
  store %class.ErrorHandler* %2, %class.ErrorHandler** %15, align 8, !tbaa !20296
  %16 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 0, i32 2
  store i8* null, i8** %16, align 8, !tbaa !20297
  %17 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 0, i32 3
  store i8 0, i8* %17, align 8, !tbaa !20298
  %18 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 5
  %19 = bitcast %class.Vector.2* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %19, i8 0, i64 16, i1 false) #34
  invoke void @_ZN4Args10initializeEPK6VectorI6StringLm16EE(%class.Args* nonnull %7, %class.Vector.0* nonnull %1)
          to label %_ZN4ArgsC2ERK6VectorI6StringLm16EEPK7ElementP12ErrorHandler.exit unwind label %20

20:                                               ; preds = %3
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = bitcast %class.Vector.2* %18 to i8**
  %23 = load i8*, i8** %22, align 8, !tbaa !20299
  %24 = icmp eq i8* %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %20
  call void @_ZdaPv(i8* nonnull %23) #55
  br label %26

26:                                               ; preds = %25, %20
  resume { i8*, i32 } %21

_ZN4ArgsC2ERK6VectorI6StringLm16EEPK7ElementP12ErrorHandler.exit: ; preds = %3
  invoke fastcc void @_Z14args_base_readIdEvP4ArgsPKciRT_(%class.Args* nonnull %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19.14705, i64 0, i64 0), i32 2, double* nonnull dereferenceable(8) %6)
          to label %27 unwind label %93

27:                                               ; preds = %_ZN4ArgsC2ERK6VectorI6StringLm16EEPK7ElementP12ErrorHandler.exit
  %28 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 1
  invoke void @_Z14args_base_readIbEvP4ArgsPKciRT_(%class.Args* nonnull %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.6107, i64 0, i64 0), i32 2, i8* nonnull dereferenceable(1) %28)
          to label %29 unwind label %93

29:                                               ; preds = %27
  %30 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #34
  store i32 0, i32* %8, align 4, !tbaa !20283
  invoke fastcc void @_Z21args_base_read_or_setIjiEvP4ArgsPKciRT_RKT0_(%class.Args* nonnull %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7501, i64 0, i64 0), i32 0, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %8)
          to label %31 unwind label %97

31:                                               ; preds = %29
  %32 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #34
  store i32 0, i32* %9, align 4, !tbaa !20283
  invoke fastcc void @_Z21args_base_read_or_setIjiEvP4ArgsPKciRT_RKT0_(%class.Args* nonnull %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.6109, i64 0, i64 0), i32 0, i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %9)
          to label %33 unwind label %.loopexit.split-lp

33:                                               ; preds = %31
  invoke void @_ZN4Args14check_completeEv(%class.Args* nonnull %7)
          to label %.noexc unwind label %.loopexit.split-lp

.noexc:                                           ; preds = %33
  %34 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 2
  %35 = load i8, i8* %34, align 2, !tbaa !20301, !range !20292
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %_ZN4Args8completeEv.exit, label %37

37:                                               ; preds = %.noexc
  %38 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 6
  %39 = load %"struct.Args::Slot"*, %"struct.Args::Slot"** %38, align 8, !tbaa !20304
  %40 = icmp eq %"struct.Args::Slot"* %39, null
  br i1 %40, label %.loopexit3, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.Args::Slot"** %38 to i64*
  br label %46

.loopexit3:                                       ; preds = %.noexc1, %37
  %43 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 3
  %44 = load i8, i8* %43, align 1, !tbaa !20305
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %.loopexit, label %.preheader

46:                                               ; preds = %.noexc1, %41
  %47 = phi %"struct.Args::Slot"* [ %39, %41 ], [ %58, %.noexc1 ]
  %48 = getelementptr inbounds %"struct.Args::Slot", %"struct.Args::Slot"* %47, i64 0, i32 1
  %49 = bitcast %"struct.Args::Slot"** %48 to i64*
  %50 = load i64, i64* %49, align 8, !tbaa !20306
  store i64 %50, i64* %42, align 8, !tbaa !20304
  %51 = bitcast %"struct.Args::Slot"* %47 to void (%"struct.Args::Slot"*)***
  %52 = load void (%"struct.Args::Slot"*)**, void (%"struct.Args::Slot"*)*** %51, align 8, !tbaa !20285
  %53 = getelementptr inbounds void (%"struct.Args::Slot"*)*, void (%"struct.Args::Slot"*)** %52, i64 2
  %54 = load void (%"struct.Args::Slot"*)*, void (%"struct.Args::Slot"*)** %53, align 8
  invoke void %54(%"struct.Args::Slot"* nonnull %47)
          to label %.noexc1 unwind label %.loopexit2

.noexc1:                                          ; preds = %46
  %55 = load void (%"struct.Args::Slot"*)**, void (%"struct.Args::Slot"*)*** %51, align 8, !tbaa !20285
  %56 = getelementptr inbounds void (%"struct.Args::Slot"*)*, void (%"struct.Args::Slot"*)** %55, i64 1
  %57 = load void (%"struct.Args::Slot"*)*, void (%"struct.Args::Slot"*)** %56, align 8
  call void %57(%"struct.Args::Slot"* nonnull %47) #34
  %58 = load %"struct.Args::Slot"*, %"struct.Args::Slot"** %38, align 8, !tbaa !20304
  %59 = icmp eq %"struct.Args::Slot"* %58, null
  br i1 %59, label %.loopexit3, label %46

.loopexit:                                        ; preds = %.preheader, %.loopexit3
  %60 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 7, i64 0
  store i8 0, i8* %60, align 8, !tbaa !20287
  store i8 0, i8* %43, align 1, !tbaa !20305
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #34
  call void @_ZN4ArgsD2Ev(%class.Args* nonnull %7) #34
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %13) #34
  %61 = load double, double* %6, align 8, !tbaa !21519
  %62 = fmul double %61, 1.000000e+03
  %63 = fptoui double %62 to i64
  %64 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 3
  store i64 %63, i64* %64, align 8, !tbaa !25103
  %65 = load i32, i32* %4, align 4, !tbaa !20283
  %66 = icmp eq i32 %65, 0
  %67 = mul i32 %65, 1000
  %68 = select i1 %66, i32 -1, i32 %67
  %69 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 5
  store i32 %68, i32* %69, align 4
  %70 = load i32, i32* %5, align 4, !tbaa !20283
  %71 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 4
  store i32 %70, i32* %71, align 8, !tbaa !25105
  br label %112

.preheader:                                       ; preds = %.preheader, %.loopexit3
  %72 = phi i32 [ %89, %.preheader ], [ 0, %.loopexit3 ]
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 7, i64 %73
  %75 = load i8, i8* %74, align 1, !tbaa !20287
  %76 = zext i8 %75 to i32
  %77 = add nuw nsw i32 %72, 1
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 7, i64 %78
  %80 = add nuw nsw i32 %77, %76
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 7, i64 %81
  %83 = bitcast i8* %82 to i8**
  %84 = load i8*, i8** %83, align 8, !tbaa !20284
  %85 = zext i8 %75 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* nonnull align 1 %79, i64 %85, i1 false)
  %86 = load i8, i8* %74, align 1, !tbaa !20287
  %87 = zext i8 %86 to i32
  %88 = add i32 %72, 9
  %89 = add i32 %88, %87
  %90 = load i8, i8* %43, align 1, !tbaa !20305
  %91 = zext i8 %90 to i32
  %92 = icmp ult i32 %89, %91
  br i1 %92, label %.preheader, label %.loopexit

_ZN4Args8completeEv.exit:                         ; preds = %.noexc
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #34
  call void @_ZN4ArgsD2Ev(%class.Args* nonnull %7) #34
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %13) #34
  br label %112

93:                                               ; preds = %27, %_ZN4ArgsC2ERK6VectorI6StringLm16EEPK7ElementP12ErrorHandler.exit
  %94 = landingpad { i8*, i32 }
          cleanup
  %95 = extractvalue { i8*, i32 } %94, 0
  %96 = extractvalue { i8*, i32 } %94, 1
  br label %107

97:                                               ; preds = %29
  %98 = landingpad { i8*, i32 }
          cleanup
  %99 = extractvalue { i8*, i32 } %98, 0
  %100 = extractvalue { i8*, i32 } %98, 1
  br label %104

.loopexit2:                                       ; preds = %46
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %101

.loopexit.split-lp:                               ; preds = %33, %31
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %101

101:                                              ; preds = %.loopexit.split-lp, %.loopexit2
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %.loopexit2 ], [ %lpad.loopexit.split-lp, %.loopexit.split-lp ]
  %102 = extractvalue { i8*, i32 } %lpad.phi, 0
  %103 = extractvalue { i8*, i32 } %lpad.phi, 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #34
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %102, %101 ], [ %99, %97 ]
  %106 = phi i32 [ %103, %101 ], [ %100, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #34
  br label %107

107:                                              ; preds = %104, %93
  %108 = phi i8* [ %105, %104 ], [ %95, %93 ]
  %109 = phi i32 [ %106, %104 ], [ %96, %93 ]
  call void @_ZN4ArgsD2Ev(%class.Args* nonnull %7) #34
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %13) #34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #34
  %110 = insertvalue { i8*, i32 } undef, i8* %108, 0
  %111 = insertvalue { i8*, i32 } %110, i32 %109, 1
  resume { i8*, i32 } %111

112:                                              ; preds = %_ZN4Args8completeEv.exit, %.loopexit
  %113 = phi i32 [ 0, %.loopexit ], [ -1, %_ZN4Args8completeEv.exit ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #34
  ret i32 %113
}

define weak_odr dso_local void @_ZN18AverageCounterBaseI19AverageCounterStatsImEE12add_handlersEv(%class.AverageCounterBase* %0) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.AverageCounterBase* %0 to %class.Element*
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27.12883, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZL33averagecounter_read_count_handlerI19AverageCounterStatsImEE6StringP7ElementPv, i32 0, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7.11527, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZL33averagecounter_read_count_handlerI19AverageCounterStatsImEE6StringP7ElementPv, i32 1, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6.6097, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZL33averagecounter_read_count_handlerI19AverageCounterStatsImEE6StringP7ElementPv, i32 2, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7.6098, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZL33averagecounter_read_count_handlerI19AverageCounterStatsImEE6StringP7ElementPv, i32 3, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.11737, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZN18AverageCounterBaseI19AverageCounterStatsImEE32averagecounter_read_rate_handlerEP7ElementPv, i32 0, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6.6953, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZN18AverageCounterBaseI19AverageCounterStatsImEE32averagecounter_read_rate_handlerEP7ElementPv, i32 1, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25.6432, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZN18AverageCounterBaseI19AverageCounterStatsImEE32averagecounter_read_rate_handlerEP7ElementPv, i32 2, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11.6102, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZN18AverageCounterBaseI19AverageCounterStatsImEE32averagecounter_read_rate_handlerEP7ElementPv, i32 3, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49.13466, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZN18AverageCounterBaseI19AverageCounterStatsImEE32averagecounter_read_rate_handlerEP7ElementPv, i32 4, i32 0)
  tail call void @_ZN7Element17add_write_handlerEPKcPFiRK6StringPS_PvP12ErrorHandlerEij(%class.Element* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38.12499, i64 0, i64 0), i32 (%class.String*, %class.Element*, i8*, %class.ErrorHandler*)* nonnull @_ZL34averagecounter_reset_write_handlerI19AverageCounterStatsImEEiRK6StringP7ElementPvP12ErrorHandler, i32 0, i32 8192)
  tail call void @_ZN7Element17add_write_handlerEPKcPFiRK6StringPS_PvP12ErrorHandlerEij(%class.Element* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14.6105, i64 0, i64 0), i32 (%class.String*, %class.Element*, i8*, %class.ErrorHandler*)* nonnull @_ZL34averagecounter_reset_write_handlerI19AverageCounterStatsImEEiRK6StringP7ElementPvP12ErrorHandler, i32 1, i32 8192)
  ret void
}

define weak_odr dso_local i32 @_ZN18AverageCounterBaseI19AverageCounterStatsImEE10initializeEP12ErrorHandler(%class.AverageCounterBase* %0, %class.ErrorHandler* %1) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 2
  %4 = bitcast %"struct.TimestampAccumBase<per_thread>::State"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %4, i8 0, i64 32, i1 false) #34
  ret i32 0
}

define weak_odr dso_local %class.PacketBatch* @_ZN18AverageCounterBaseI19AverageCounterStatsImEE19simple_action_batchEP11PacketBatch(%class.AverageCounterBase* %0, %class.PacketBatch* %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %struct.timespec, align 8
  %4 = bitcast %struct.timespec* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #34
  %5 = call i32 @clock_gettime(i32 1, %struct.timespec* nonnull %3) #34
  %6 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i64 0, i32 0
  %7 = load i64, i64* %6, align 8, !tbaa !20557
  %8 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i64 0, i32 1
  %9 = load i64, i64* %8, align 8, !tbaa !20559
  %10 = shl i64 %7, 32
  %11 = ashr exact i64 %10, 32
  %12 = mul nsw i64 %11, 1000000000
  %13 = and i64 %9, 4294967295
  %14 = add nsw i64 %12, %13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #34
  %15 = sdiv i64 %14, 1000000
  %16 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 2
  %17 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 2, i32 2
  %18 = load i64, i64* %17, align 8, !tbaa !25102
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %2
  store i64 %15, i64* %17, align 8, !tbaa !25102
  br label %21

21:                                               ; preds = %20, %2
  %22 = phi i64 [ %15, %20 ], [ %18, %2 ]
  %23 = sub i64 %15, %22
  %24 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 3
  %25 = load i64, i64* %24, align 8, !tbaa !25103
  %26 = icmp uge i64 %23, %25
  %27 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 5
  %28 = load i32, i32* %27, align 4, !tbaa !25106
  %29 = zext i32 %28 to i64
  %30 = icmp ult i64 %23, %29
  %31 = and i1 %26, %30
  br i1 %31, label %32, label %79, !prof !21170

32:                                               ; preds = %21
  %33 = icmp eq %class.PacketBatch* %1, null
  br i1 %33, label %.loopexit, label %34

34:                                               ; preds = %32
  %35 = bitcast %class.PacketBatch* %1 to %class.Packet*
  br label %57

.loopexit:                                        ; preds = %57, %32
  %36 = phi i64 [ 0, %32 ], [ %68, %57 ]
  %37 = getelementptr inbounds %class.PacketBatch, %class.PacketBatch* %1, i64 48, i32 0
  %38 = getelementptr inbounds i8, i8* %37, i64 24
  %39 = bitcast i8* %38 to i16*
  %40 = load i16, i16* %39, align 2, !tbaa !20287
  %41 = icmp eq i16 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %.loopexit
  tail call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.259.16395, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6.13925, i64 0, i64 0), i32 439, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__PRETTY_FUNCTION__._ZN11PacketBatch5countEv.13926, i64 0, i64 0)) #57
  unreachable

43:                                               ; preds = %.loopexit
  %44 = zext i16 %40 to i64
  %45 = getelementptr inbounds %"struct.TimestampAccumBase<per_thread>::State", %"struct.TimestampAccumBase<per_thread>::State"* %16, i64 0, i32 0
  %46 = load i64, i64* %45, align 8, !tbaa !25107
  %47 = add i64 %46, %44
  store i64 %47, i64* %45, align 8, !tbaa !25107
  %48 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 2, i32 1
  %49 = load i64, i64* %48, align 8, !tbaa !25108
  %50 = add i64 %49, %36
  store i64 %50, i64* %48, align 8, !tbaa !25108
  %51 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 2, i32 3
  store i64 %15, i64* %51, align 8, !tbaa !25104
  %52 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 4
  %53 = load i32, i32* %52, align 8, !tbaa !25105
  %54 = icmp ne i32 %53, 0
  %55 = icmp ugt i64 %23, 1000
  %56 = and i1 %55, %54
  br i1 %56, label %72, label %82, !prof !25109

57:                                               ; preds = %57, %34
  %58 = phi i64 [ %68, %57 ], [ 0, %34 ]
  %59 = phi %class.Packet* [ %70, %57 ], [ %35, %34 ]
  %60 = getelementptr inbounds %class.Packet, %class.Packet* %59, i64 0, i32 4
  %61 = bitcast i8** %60 to i64*
  %62 = load i64, i64* %61, align 8, !tbaa !20396
  %63 = getelementptr inbounds %class.Packet, %class.Packet* %59, i64 0, i32 3
  %64 = bitcast i8** %63 to i64*
  %65 = load i64, i64* %64, align 8, !tbaa !20399
  %66 = sub i64 %62, %65
  %67 = and i64 %66, 4294967295
  %68 = add i64 %67, %58
  %69 = getelementptr inbounds %class.Packet, %class.Packet* %59, i64 0, i32 6, i32 6
  %70 = load %class.Packet*, %class.Packet** %69, align 8, !tbaa !20284
  %71 = icmp eq %class.Packet* %70, null
  br i1 %71, label %.loopexit, label %57

72:                                               ; preds = %43
  %73 = mul i64 %47, 1000
  %74 = udiv i64 %73, %23
  %75 = zext i32 %53 to i64
  %76 = icmp ugt i64 %74, %75
  br i1 %76, label %77, label %82

77:                                               ; preds = %72
  tail call void (i8*, ...) @click_chatter(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.15.6094, i64 0, i64 0), %class.AverageCounterBase* nonnull %0, i64 %74)
  store i32 0, i32* %52, align 8, !tbaa !25105
  %78 = bitcast %"struct.TimestampAccumBase<per_thread>::State"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %78, i8 0, i64 32, i1 false) #34
  br label %82

79:                                               ; preds = %21
  br i1 %30, label %80, label %82

80:                                               ; preds = %79
  %81 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 2, i32 3
  store i64 %15, i64* %81, align 8, !tbaa !25104
  br label %82

82:                                               ; preds = %80, %79, %77, %72, %43
  ret %class.PacketBatch* %1
}

define weak_odr dso_local void @_ZN18AverageCounterBaseI19AverageCounterStatsImEE32averagecounter_read_rate_handlerEP7ElementPv(%class.String* noalias sret %0, %class.Element* %1, i8* %2) #0 comdat align 2 {
  %4 = getelementptr inbounds %class.Element, %class.Element* %1, i64 1, i32 4, i64 1
  %5 = bitcast %"class.Element::Port"** %4 to i64*
  %6 = load i64, i64* %5, align 8, !tbaa !25104
  %7 = getelementptr inbounds %class.Element, %class.Element* %1, i64 1, i32 4
  %8 = bitcast [2 x %"class.Element::Port"*]* %7 to i64*
  %9 = load i64, i64* %8, align 8, !tbaa !25102
  %10 = sub i64 %6, %9
  %11 = ptrtoint i8* %2 to i64
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %class.Element, %class.Element* %1, i64 1, i32 5
  %14 = bitcast [4 x %"class.Element::Port"]* %13 to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !25103
  %16 = sub i64 %10, %15
  %17 = icmp eq i64 %16, 0
  %18 = select i1 %17, i64 1, i64 %16
  switch i32 %12, label %42 [
    i32 3, label %19
    i32 2, label %33
    i32 1, label %38
  ]

19:                                               ; preds = %3
  %20 = getelementptr inbounds %class.Element, %class.Element* %1, i64 1, i32 1
  %21 = bitcast i32* %20 to i64*
  %22 = load i64, i64* %21, align 8, !tbaa !25108
  %23 = getelementptr inbounds %class.Element, %class.Element* %1, i64 1
  %24 = bitcast %class.Element* %23 to i64*
  %25 = load i64, i64* %24, align 8, !tbaa !25107
  %26 = getelementptr inbounds %class.Element, %class.Element* %1, i64 0, i32 12, i64 0
  %27 = load i8, i8* %26, align 1, !tbaa !25099, !range !20292
  %28 = icmp eq i8 %27, 0
  %29 = select i1 %28, i64 20, i64 24
  %30 = mul i64 %29, %25
  %31 = add i64 %30, %22
  %32 = shl i64 %31, 3
  br label %49

33:                                               ; preds = %3
  %34 = getelementptr inbounds %class.Element, %class.Element* %1, i64 1, i32 1
  %35 = bitcast i32* %34 to i64*
  %36 = load i64, i64* %35, align 8, !tbaa !25108
  %37 = shl i64 %36, 3
  br label %49

38:                                               ; preds = %3
  %39 = getelementptr inbounds %class.Element, %class.Element* %1, i64 1, i32 1
  %40 = bitcast i32* %39 to i64*
  %41 = load i64, i64* %40, align 8, !tbaa !25108
  br label %49

42:                                               ; preds = %3
  %43 = getelementptr inbounds %class.Element, %class.Element* %1, i64 1
  %44 = bitcast %class.Element* %43 to i64*
  %45 = load i64, i64* %44, align 8, !tbaa !25107
  %46 = icmp eq i32 %12, 4
  br i1 %46, label %47, label %49

47:                                               ; preds = %42
  %48 = uitofp i64 %18 to double
  br label %54

49:                                               ; preds = %42, %38, %33, %19
  %50 = phi i64 [ %45, %42 ], [ %32, %19 ], [ %37, %33 ], [ %41, %38 ]
  %51 = uitofp i64 %50 to double
  %52 = fmul double %51, 1.000000e+03
  %53 = uitofp i64 %18 to double
  br label %54

54:                                               ; preds = %49, %47
  %55 = phi double [ %53, %49 ], [ 1.000000e+03, %47 ]
  %56 = phi double [ %52, %49 ], [ %48, %47 ]
  %57 = fdiv double %56, %55
  tail call void @_ZN6StringC2Ed(%class.String* %0, double %57)
  ret void
}

define weak_odr dso_local void @_ZN18AverageCounterBaseI19AverageCounterStatsImEEC2Ev(%class.AverageCounterBase* %0) unnamed_addr #0 comdat($_ZN18AverageCounterBaseI19AverageCounterStatsImEEC5Ev) align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 0, i32 0, i32 2
  store i8 0, i8* %4, align 4, !tbaa !20277
  %5 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 0, i32 0, i32 5, i64 0
  %6 = getelementptr inbounds %"class.Element::Port", %"class.Element::Port"* %5, i64 0, i32 0
  store %class.Element* null, %class.Element** %6, align 8, !tbaa !20278
  %7 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 0, i32 0, i32 5, i64 0, i32 1
  store i32 -2, i32* %7, align 8, !tbaa !20280
  %8 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 0, i32 0, i32 5, i64 1, i32 0
  store %class.Element* null, %class.Element** %8, align 8, !tbaa !20278
  %9 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 0, i32 0, i32 5, i64 1, i32 1
  store i32 -2, i32* %9, align 8, !tbaa !20280
  %10 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 0, i32 0, i32 5, i64 2, i32 0
  store %class.Element* null, %class.Element** %10, align 8, !tbaa !20278
  %11 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 0, i32 0, i32 5, i64 2, i32 1
  store i32 -2, i32* %11, align 8, !tbaa !20280
  %12 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 0, i32 0, i32 5, i64 3, i32 0
  store %class.Element* null, %class.Element** %12, align 8, !tbaa !20278
  %13 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 0, i32 0, i32 5, i64 3, i32 1
  store i32 -2, i32* %13, align 8, !tbaa !20280
  %14 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 0, i32 0, i32 7
  store %class.Router* null, %class.Router** %14, align 8, !tbaa !20281
  %15 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 0, i32 0, i32 8
  store i32 -1, i32* %15, align 8, !tbaa !20282
  %16 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 0, i32 0, i32 10
  %17 = bitcast %class.Vector* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(17) %17, i8 0, i64 17, i1 false) #34
  %18 = load i32, i32* @_ZN7Element19nelements_allocatedE, align 4, !tbaa !20283
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* @_ZN7Element19nelements_allocatedE, align 4, !tbaa !20283
  %20 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 0, i32 0, i32 4, i64 1
  store %"class.Element::Port"* %5, %"class.Element::Port"** %20, align 8, !tbaa !20284
  %21 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 0, i32 0, i32 4, i64 0
  store %"class.Element::Port"* %5, %"class.Element::Port"** %21, align 8, !tbaa !20284
  %22 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 0, i32 0, i32 6, i64 1
  store i32 0, i32* %22, align 4, !tbaa !20283
  %23 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 0, i32 0, i32 6, i64 0
  store i32 0, i32* %23, align 8, !tbaa !20283
  store i32 1, i32* %3, align 8, !tbaa !20267
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*] }, { [39 x i8*] }* @_ZTV18AverageCounterBaseI19AverageCounterStatsImEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !20285
  %24 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 2
  %25 = bitcast %"struct.TimestampAccumBase<per_thread>::State"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %25, i8 0, i64 32, i1 false) #34
  %26 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 1
  store i8 1, i8* %26, align 1, !tbaa !25099
  ret void
}

define internal void @_ZN18AverageCounterBaseI19AverageCounterStatsImEED0Ev(%class.AverageCounterBase* nocapture readnone %0) unnamed_addr #24 comdat align 2 {
  tail call void @llvm.trap() #57
  unreachable
}

define dso_local void @_ZN16AverageCounterMPC2Ev(%class.AverageCounterMP* %0) unnamed_addr #2 align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i8 0, i8* %4, align 4, !tbaa !20277
  %5 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 0
  %6 = getelementptr inbounds %"class.Element::Port", %"class.Element::Port"* %5, i64 0, i32 0
  store %class.Element* null, %class.Element** %6, align 8, !tbaa !20278
  %7 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 0, i32 1
  store i32 -2, i32* %7, align 8, !tbaa !20280
  %8 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 1, i32 0
  store %class.Element* null, %class.Element** %8, align 8, !tbaa !20278
  %9 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 1, i32 1
  store i32 -2, i32* %9, align 8, !tbaa !20280
  %10 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 2, i32 0
  store %class.Element* null, %class.Element** %10, align 8, !tbaa !20278
  %11 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 2, i32 1
  store i32 -2, i32* %11, align 8, !tbaa !20280
  %12 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 3, i32 0
  store %class.Element* null, %class.Element** %12, align 8, !tbaa !20278
  %13 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 3, i32 1
  store i32 -2, i32* %13, align 8, !tbaa !20280
  %14 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 7
  store %class.Router* null, %class.Router** %14, align 8, !tbaa !20281
  %15 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 8
  store i32 -1, i32* %15, align 8, !tbaa !20282
  %16 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 10
  %17 = bitcast %class.Vector* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(17) %17, i8 0, i64 17, i1 false) #34
  %18 = load i32, i32* @_ZN7Element19nelements_allocatedE, align 4, !tbaa !20283
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* @_ZN7Element19nelements_allocatedE, align 4, !tbaa !20283
  %20 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 4, i64 1
  store %"class.Element::Port"* %5, %"class.Element::Port"** %20, align 8, !tbaa !20284
  %21 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 4, i64 0
  store %"class.Element::Port"* %5, %"class.Element::Port"** %21, align 8, !tbaa !20284
  %22 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i64 1
  store i32 0, i32* %22, align 4, !tbaa !20283
  %23 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i64 0
  store i32 0, i32* %23, align 8, !tbaa !20283
  store i32 1, i32* %3, align 8, !tbaa !20267
  %24 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store volatile i64 0, i64* %24, align 16, !tbaa !20964
  %25 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  store volatile i64 0, i64* %25, align 16, !tbaa !20964
  %26 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 2, i32 2, i32 0
  store volatile i64 0, i64* %26, align 16, !tbaa !20964
  %27 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 2, i32 3, i32 0
  store volatile i64 0, i64* %27, align 16, !tbaa !20964
  %28 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 1
  store i8 1, i8* %28, align 1, !tbaa !25111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*] }, { [39 x i8*] }* @_ZTV16AverageCounterMP, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 16, !tbaa !20285
  ret void
}

define internal void @_ZN16AverageCounterMPD0Ev(%class.AverageCounterMP* %0) unnamed_addr #7 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*] }, { [38 x i8*] }* @_ZTV7Element, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !20285
  %3 = load i32, i32* @_ZN7Element19nelements_allocatedE, align 4, !tbaa !20283
  %4 = add nsw i32 %3, -1
  store i32 %4, i32* @_ZN7Element19nelements_allocatedE, align 4, !tbaa !20283
  %5 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 4, i64 0
  %6 = load %"class.Element::Port"*, %"class.Element::Port"** %5, align 8, !tbaa !20284
  %7 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 0
  %8 = icmp uge %"class.Element::Port"* %6, %7
  %9 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %10 = bitcast [2 x i32]* %9 to %"class.Element::Port"*
  %11 = icmp ule %"class.Element::Port"* %6, %10
  %12 = and i1 %11, %8
  %13 = icmp eq %"class.Element::Port"* %6, null
  %14 = or i1 %13, %12
  br i1 %14, label %17, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.Element::Port"* %6 to i8*
  tail call void @_ZdaPv(i8* %16) #55
  br label %17

17:                                               ; preds = %15, %1
  %18 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 4, i64 1
  %19 = load %"class.Element::Port"*, %"class.Element::Port"** %18, align 8, !tbaa !20284
  %20 = icmp uge %"class.Element::Port"* %19, %7
  %21 = icmp ule %"class.Element::Port"* %19, %10
  %22 = and i1 %21, %20
  %23 = icmp eq %"class.Element::Port"* %19, null
  %24 = or i1 %23, %22
  br i1 %24, label %27, label %25

25:                                               ; preds = %17
  %26 = bitcast %"class.Element::Port"* %19 to i8*
  tail call void @_ZdaPv(i8* %26) #55
  br label %27

27:                                               ; preds = %25, %17
  %28 = getelementptr inbounds %class.AverageCounterMP, %class.AverageCounterMP* %0, i64 0, i32 0, i32 0, i32 0, i32 10
  %29 = bitcast %class.Vector* %28 to i8**
  %30 = load i8*, i8** %29, align 8, !tbaa !20288
  %31 = icmp eq i8* %30, null
  br i1 %31, label %_ZN12BatchElementD2Ev.exit, label %32

32:                                               ; preds = %27
  tail call void @_ZdaPv(i8* nonnull %30) #55
  br label %_ZN12BatchElementD2Ev.exit

_ZN12BatchElementD2Ev.exit:                       ; preds = %32, %27
  ret void
}

define weak_odr dso_local %class.Packet* @_ZN18AverageCounterBaseI19AverageCounterStatsI15atomic_uint64_tEE13simple_actionEP6Packet(%class.AverageCounterBase.21* %0, %class.Packet* %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %struct.timespec, align 8
  %4 = bitcast %struct.timespec* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #34
  %5 = call i32 @clock_gettime(i32 1, %struct.timespec* nonnull %3) #34
  %6 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i64 0, i32 0
  %7 = load i64, i64* %6, align 8, !tbaa !20557
  %8 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i64 0, i32 1
  %9 = load i64, i64* %8, align 8, !tbaa !20559
  %10 = shl i64 %7, 32
  %11 = ashr exact i64 %10, 32
  %12 = mul nsw i64 %11, 1000000000
  %13 = and i64 %9, 4294967295
  %14 = add nsw i64 %12, %13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #34
  %15 = sdiv i64 %14, 1000000
  %16 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 2, i32 0
  %17 = load volatile i64, i64* %16, align 16, !tbaa !20964
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %2
  store volatile i64 %15, i64* %16, align 16, !tbaa !20964
  br label %20

20:                                               ; preds = %19, %2
  %21 = load volatile i64, i64* %16, align 16, !tbaa !20964
  %22 = sub i64 %15, %21
  %23 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 3
  %24 = load i64, i64* %23, align 16, !tbaa !25114
  %25 = icmp ult i64 %22, %24
  br i1 %25, label %37, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %class.Packet, %class.Packet* %1, i64 0, i32 4
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8, !tbaa !20396
  %30 = getelementptr inbounds %class.Packet, %class.Packet* %1, i64 0, i32 3
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8, !tbaa !20399
  %33 = sub i64 %29, %32
  %34 = and i64 %33, 4294967295
  %35 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 0, i32 0
  tail call void asm sideeffect "lock ; addq $1,$0", "=*m,r,*m,~{cc},~{dirflag},~{fpsr},~{flags}"(i64* nonnull %35, i64 1, i64* nonnull %35) #34, !srcloc !25115
  %36 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 1, i32 0
  tail call void asm sideeffect "lock ; addq $1,$0", "=*m,r,*m,~{cc},~{dirflag},~{fpsr},~{flags}"(i64* nonnull %36, i64 %34, i64* nonnull %36) #34, !srcloc !25115
  br label %37

37:                                               ; preds = %26, %20
  %38 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 3, i32 0
  store volatile i64 %15, i64* %38, align 16, !tbaa !20964
  ret %class.Packet* %1
}

define internal i8* @_ZNK16AverageCounterMP10class_nameEv(%class.AverageCounterMP* nocapture readnone %0) unnamed_addr #4 comdat align 2 {
  ret i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.223.13227, i64 0, i64 0)
}

define weak_odr dso_local i8* @_ZNK18AverageCounterBaseI19AverageCounterStatsI15atomic_uint64_tEE10port_countEv(%class.AverageCounterBase.21* %0) unnamed_addr #2 comdat align 2 {
  ret i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZN7Element9PORTS_1_1E, i64 0, i64 0)
}

define weak_odr dso_local i32 @_ZN18AverageCounterBaseI19AverageCounterStatsI15atomic_uint64_tEE9configureER6VectorI6StringLm16EEP12ErrorHandler(%class.AverageCounterBase.21* %0, %class.Vector.0* dereferenceable(16) %1, %class.ErrorHandler* %2) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca double, align 8
  %7 = alloca %class.Args, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #34
  store i32 0, i32* %4, align 4, !tbaa !20283
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #34
  store i32 0, i32* %5, align 4, !tbaa !20283
  %12 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #34
  store double 0.000000e+00, double* %6, align 8, !tbaa !21519
  %13 = bitcast %class.Args* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %13) #34
  %14 = bitcast %class.Args* %7 to %class.AverageCounterBase.21**
  store %class.AverageCounterBase.21* %0, %class.AverageCounterBase.21** %14, align 8, !tbaa !20294
  %15 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 0, i32 1
  store %class.ErrorHandler* %2, %class.ErrorHandler** %15, align 8, !tbaa !20296
  %16 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 0, i32 2
  store i8* null, i8** %16, align 8, !tbaa !20297
  %17 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 0, i32 3
  store i8 0, i8* %17, align 8, !tbaa !20298
  %18 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 5
  %19 = bitcast %class.Vector.2* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %19, i8 0, i64 16, i1 false) #34
  invoke void @_ZN4Args10initializeEPK6VectorI6StringLm16EE(%class.Args* nonnull %7, %class.Vector.0* nonnull %1)
          to label %_ZN4ArgsC2ERK6VectorI6StringLm16EEPK7ElementP12ErrorHandler.exit unwind label %20

20:                                               ; preds = %3
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = bitcast %class.Vector.2* %18 to i8**
  %23 = load i8*, i8** %22, align 8, !tbaa !20299
  %24 = icmp eq i8* %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %20
  call void @_ZdaPv(i8* nonnull %23) #55
  br label %26

26:                                               ; preds = %25, %20
  resume { i8*, i32 } %21

_ZN4ArgsC2ERK6VectorI6StringLm16EEPK7ElementP12ErrorHandler.exit: ; preds = %3
  invoke fastcc void @_Z14args_base_readIdEvP4ArgsPKciRT_(%class.Args* nonnull %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19.14705, i64 0, i64 0), i32 2, double* nonnull dereferenceable(8) %6)
          to label %27 unwind label %93

27:                                               ; preds = %_ZN4ArgsC2ERK6VectorI6StringLm16EEPK7ElementP12ErrorHandler.exit
  %28 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 1
  invoke void @_Z14args_base_readIbEvP4ArgsPKciRT_(%class.Args* nonnull %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.6107, i64 0, i64 0), i32 2, i8* nonnull dereferenceable(1) %28)
          to label %29 unwind label %93

29:                                               ; preds = %27
  %30 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #34
  store i32 0, i32* %8, align 4, !tbaa !20283
  invoke fastcc void @_Z21args_base_read_or_setIjiEvP4ArgsPKciRT_RKT0_(%class.Args* nonnull %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7501, i64 0, i64 0), i32 0, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %8)
          to label %31 unwind label %97

31:                                               ; preds = %29
  %32 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #34
  store i32 0, i32* %9, align 4, !tbaa !20283
  invoke fastcc void @_Z21args_base_read_or_setIjiEvP4ArgsPKciRT_RKT0_(%class.Args* nonnull %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.6109, i64 0, i64 0), i32 0, i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %9)
          to label %33 unwind label %.loopexit.split-lp

33:                                               ; preds = %31
  invoke void @_ZN4Args14check_completeEv(%class.Args* nonnull %7)
          to label %.noexc unwind label %.loopexit.split-lp

.noexc:                                           ; preds = %33
  %34 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 2
  %35 = load i8, i8* %34, align 2, !tbaa !20301, !range !20292
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %_ZN4Args8completeEv.exit, label %37

37:                                               ; preds = %.noexc
  %38 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 6
  %39 = load %"struct.Args::Slot"*, %"struct.Args::Slot"** %38, align 8, !tbaa !20304
  %40 = icmp eq %"struct.Args::Slot"* %39, null
  br i1 %40, label %.loopexit3, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.Args::Slot"** %38 to i64*
  br label %46

.loopexit3:                                       ; preds = %.noexc1, %37
  %43 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 3
  %44 = load i8, i8* %43, align 1, !tbaa !20305
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %.loopexit, label %.preheader

46:                                               ; preds = %.noexc1, %41
  %47 = phi %"struct.Args::Slot"* [ %39, %41 ], [ %58, %.noexc1 ]
  %48 = getelementptr inbounds %"struct.Args::Slot", %"struct.Args::Slot"* %47, i64 0, i32 1
  %49 = bitcast %"struct.Args::Slot"** %48 to i64*
  %50 = load i64, i64* %49, align 8, !tbaa !20306
  store i64 %50, i64* %42, align 8, !tbaa !20304
  %51 = bitcast %"struct.Args::Slot"* %47 to void (%"struct.Args::Slot"*)***
  %52 = load void (%"struct.Args::Slot"*)**, void (%"struct.Args::Slot"*)*** %51, align 8, !tbaa !20285
  %53 = getelementptr inbounds void (%"struct.Args::Slot"*)*, void (%"struct.Args::Slot"*)** %52, i64 2
  %54 = load void (%"struct.Args::Slot"*)*, void (%"struct.Args::Slot"*)** %53, align 8
  invoke void %54(%"struct.Args::Slot"* nonnull %47)
          to label %.noexc1 unwind label %.loopexit2

.noexc1:                                          ; preds = %46
  %55 = load void (%"struct.Args::Slot"*)**, void (%"struct.Args::Slot"*)*** %51, align 8, !tbaa !20285
  %56 = getelementptr inbounds void (%"struct.Args::Slot"*)*, void (%"struct.Args::Slot"*)** %55, i64 1
  %57 = load void (%"struct.Args::Slot"*)*, void (%"struct.Args::Slot"*)** %56, align 8
  call void %57(%"struct.Args::Slot"* nonnull %47) #34
  %58 = load %"struct.Args::Slot"*, %"struct.Args::Slot"** %38, align 8, !tbaa !20304
  %59 = icmp eq %"struct.Args::Slot"* %58, null
  br i1 %59, label %.loopexit3, label %46

.loopexit:                                        ; preds = %.preheader, %.loopexit3
  %60 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 7, i64 0
  store i8 0, i8* %60, align 8, !tbaa !20287
  store i8 0, i8* %43, align 1, !tbaa !20305
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #34
  call void @_ZN4ArgsD2Ev(%class.Args* nonnull %7) #34
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %13) #34
  %61 = load double, double* %6, align 8, !tbaa !21519
  %62 = fmul double %61, 1.000000e+03
  %63 = fptoui double %62 to i64
  %64 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 3
  store i64 %63, i64* %64, align 16, !tbaa !25114
  %65 = load i32, i32* %4, align 4, !tbaa !20283
  %66 = icmp eq i32 %65, 0
  %67 = mul i32 %65, 1000
  %68 = select i1 %66, i32 -1, i32 %67
  %69 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 5
  store i32 %68, i32* %69, align 4
  %70 = load i32, i32* %5, align 4, !tbaa !20283
  %71 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 4
  store i32 %70, i32* %71, align 8, !tbaa !25116
  br label %112

.preheader:                                       ; preds = %.preheader, %.loopexit3
  %72 = phi i32 [ %89, %.preheader ], [ 0, %.loopexit3 ]
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 7, i64 %73
  %75 = load i8, i8* %74, align 1, !tbaa !20287
  %76 = zext i8 %75 to i32
  %77 = add nuw nsw i32 %72, 1
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 7, i64 %78
  %80 = add nuw nsw i32 %77, %76
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 7, i64 %81
  %83 = bitcast i8* %82 to i8**
  %84 = load i8*, i8** %83, align 8, !tbaa !20284
  %85 = zext i8 %75 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* nonnull align 1 %79, i64 %85, i1 false)
  %86 = load i8, i8* %74, align 1, !tbaa !20287
  %87 = zext i8 %86 to i32
  %88 = add i32 %72, 9
  %89 = add i32 %88, %87
  %90 = load i8, i8* %43, align 1, !tbaa !20305
  %91 = zext i8 %90 to i32
  %92 = icmp ult i32 %89, %91
  br i1 %92, label %.preheader, label %.loopexit

_ZN4Args8completeEv.exit:                         ; preds = %.noexc
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #34
  call void @_ZN4ArgsD2Ev(%class.Args* nonnull %7) #34
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %13) #34
  br label %112

93:                                               ; preds = %27, %_ZN4ArgsC2ERK6VectorI6StringLm16EEPK7ElementP12ErrorHandler.exit
  %94 = landingpad { i8*, i32 }
          cleanup
  %95 = extractvalue { i8*, i32 } %94, 0
  %96 = extractvalue { i8*, i32 } %94, 1
  br label %107

97:                                               ; preds = %29
  %98 = landingpad { i8*, i32 }
          cleanup
  %99 = extractvalue { i8*, i32 } %98, 0
  %100 = extractvalue { i8*, i32 } %98, 1
  br label %104

.loopexit2:                                       ; preds = %46
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %101

.loopexit.split-lp:                               ; preds = %33, %31
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %101

101:                                              ; preds = %.loopexit.split-lp, %.loopexit2
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %.loopexit2 ], [ %lpad.loopexit.split-lp, %.loopexit.split-lp ]
  %102 = extractvalue { i8*, i32 } %lpad.phi, 0
  %103 = extractvalue { i8*, i32 } %lpad.phi, 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #34
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %102, %101 ], [ %99, %97 ]
  %106 = phi i32 [ %103, %101 ], [ %100, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #34
  br label %107

107:                                              ; preds = %104, %93
  %108 = phi i8* [ %105, %104 ], [ %95, %93 ]
  %109 = phi i32 [ %106, %104 ], [ %96, %93 ]
  call void @_ZN4ArgsD2Ev(%class.Args* nonnull %7) #34
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %13) #34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #34
  %110 = insertvalue { i8*, i32 } undef, i8* %108, 0
  %111 = insertvalue { i8*, i32 } %110, i32 %109, 1
  resume { i8*, i32 } %111

112:                                              ; preds = %_ZN4Args8completeEv.exit, %.loopexit
  %113 = phi i32 [ 0, %.loopexit ], [ -1, %_ZN4Args8completeEv.exit ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #34
  ret i32 %113
}

define weak_odr dso_local void @_ZN18AverageCounterBaseI19AverageCounterStatsI15atomic_uint64_tEE12add_handlersEv(%class.AverageCounterBase.21* %0) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.AverageCounterBase.21* %0 to %class.Element*
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27.12883, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZL33averagecounter_read_count_handlerI19AverageCounterStatsI15atomic_uint64_tEE6StringP7ElementPv, i32 0, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7.11527, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZL33averagecounter_read_count_handlerI19AverageCounterStatsI15atomic_uint64_tEE6StringP7ElementPv, i32 1, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6.6097, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZL33averagecounter_read_count_handlerI19AverageCounterStatsI15atomic_uint64_tEE6StringP7ElementPv, i32 2, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7.6098, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZL33averagecounter_read_count_handlerI19AverageCounterStatsI15atomic_uint64_tEE6StringP7ElementPv, i32 3, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.11737, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZN18AverageCounterBaseI19AverageCounterStatsI15atomic_uint64_tEE32averagecounter_read_rate_handlerEP7ElementPv, i32 0, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6.6953, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZN18AverageCounterBaseI19AverageCounterStatsI15atomic_uint64_tEE32averagecounter_read_rate_handlerEP7ElementPv, i32 1, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25.6432, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZN18AverageCounterBaseI19AverageCounterStatsI15atomic_uint64_tEE32averagecounter_read_rate_handlerEP7ElementPv, i32 2, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11.6102, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZN18AverageCounterBaseI19AverageCounterStatsI15atomic_uint64_tEE32averagecounter_read_rate_handlerEP7ElementPv, i32 3, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49.13466, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZN18AverageCounterBaseI19AverageCounterStatsI15atomic_uint64_tEE32averagecounter_read_rate_handlerEP7ElementPv, i32 4, i32 0)
  tail call void @_ZN7Element17add_write_handlerEPKcPFiRK6StringPS_PvP12ErrorHandlerEij(%class.Element* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38.12499, i64 0, i64 0), i32 (%class.String*, %class.Element*, i8*, %class.ErrorHandler*)* nonnull @_ZL34averagecounter_reset_write_handlerI19AverageCounterStatsI15atomic_uint64_tEEiRK6StringP7ElementPvP12ErrorHandler, i32 0, i32 8192)
  tail call void @_ZN7Element17add_write_handlerEPKcPFiRK6StringPS_PvP12ErrorHandlerEij(%class.Element* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14.6105, i64 0, i64 0), i32 (%class.String*, %class.Element*, i8*, %class.ErrorHandler*)* nonnull @_ZL34averagecounter_reset_write_handlerI19AverageCounterStatsI15atomic_uint64_tEEiRK6StringP7ElementPvP12ErrorHandler, i32 1, i32 8192)
  ret void
}

define weak_odr dso_local i32 @_ZN18AverageCounterBaseI19AverageCounterStatsI15atomic_uint64_tEE10initializeEP12ErrorHandler(%class.AverageCounterBase.21* %0, %class.ErrorHandler* %1) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 0, i32 0
  store volatile i64 0, i64* %3, align 16, !tbaa !20964
  %4 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 1, i32 0
  store volatile i64 0, i64* %4, align 16, !tbaa !20964
  %5 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 2, i32 0
  store volatile i64 0, i64* %5, align 16, !tbaa !20964
  %6 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 3, i32 0
  store volatile i64 0, i64* %6, align 16, !tbaa !20964
  ret i32 0
}

define weak_odr dso_local %class.PacketBatch* @_ZN18AverageCounterBaseI19AverageCounterStatsI15atomic_uint64_tEE19simple_action_batchEP11PacketBatch(%class.AverageCounterBase.21* %0, %class.PacketBatch* %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %struct.timespec, align 8
  %4 = bitcast %struct.timespec* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #34
  %5 = call i32 @clock_gettime(i32 1, %struct.timespec* nonnull %3) #34
  %6 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i64 0, i32 0
  %7 = load i64, i64* %6, align 8, !tbaa !20557
  %8 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i64 0, i32 1
  %9 = load i64, i64* %8, align 8, !tbaa !20559
  %10 = shl i64 %7, 32
  %11 = ashr exact i64 %10, 32
  %12 = mul nsw i64 %11, 1000000000
  %13 = and i64 %9, 4294967295
  %14 = add nsw i64 %12, %13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #34
  %15 = sdiv i64 %14, 1000000
  %16 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 2, i32 0
  %17 = load volatile i64, i64* %16, align 16, !tbaa !20964
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %2
  store volatile i64 %15, i64* %16, align 16, !tbaa !20964
  br label %20

20:                                               ; preds = %19, %2
  %21 = load volatile i64, i64* %16, align 16, !tbaa !20964
  %22 = sub i64 %15, %21
  %23 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 3
  %24 = load i64, i64* %23, align 16, !tbaa !25114
  %25 = icmp uge i64 %22, %24
  %26 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 5
  %27 = load i32, i32* %26, align 4, !tbaa !25117
  %28 = zext i32 %27 to i64
  %29 = icmp ult i64 %22, %28
  %30 = and i1 %25, %29
  br i1 %30, label %31, label %78, !prof !21170

31:                                               ; preds = %20
  %32 = icmp eq %class.PacketBatch* %1, null
  br i1 %32, label %.loopexit, label %33

33:                                               ; preds = %31
  %34 = bitcast %class.PacketBatch* %1 to %class.Packet*
  br label %50

.loopexit:                                        ; preds = %50, %31
  %35 = phi i64 [ 0, %31 ], [ %61, %50 ]
  %36 = getelementptr inbounds %class.PacketBatch, %class.PacketBatch* %1, i64 48, i32 0
  %37 = getelementptr inbounds i8, i8* %36, i64 24
  %38 = bitcast i8* %37 to i16*
  %39 = load i16, i16* %38, align 2, !tbaa !20287
  %40 = icmp eq i16 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %.loopexit
  tail call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.259.16395, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6.13925, i64 0, i64 0), i32 439, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__PRETTY_FUNCTION__._ZN11PacketBatch5countEv.13926, i64 0, i64 0)) #57
  unreachable

42:                                               ; preds = %.loopexit
  %43 = zext i16 %39 to i64
  %44 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 0, i32 0
  tail call void asm sideeffect "lock ; addq $1,$0", "=*m,r,*m,~{cc},~{dirflag},~{fpsr},~{flags}"(i64* nonnull %44, i64 %43, i64* nonnull %44) #34, !srcloc !25115
  %45 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 1, i32 0
  tail call void asm sideeffect "lock ; addq $1,$0", "=*m,r,*m,~{cc},~{dirflag},~{fpsr},~{flags}"(i64* nonnull %45, i64 %35, i64* nonnull %45) #34, !srcloc !25115
  %46 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 3, i32 0
  store volatile i64 %15, i64* %46, align 16, !tbaa !20964
  %47 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 4
  %48 = load i32, i32* %47, align 8, !tbaa !25116
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %81, label %65

50:                                               ; preds = %50, %33
  %51 = phi i64 [ %61, %50 ], [ 0, %33 ]
  %52 = phi %class.Packet* [ %63, %50 ], [ %34, %33 ]
  %53 = getelementptr inbounds %class.Packet, %class.Packet* %52, i64 0, i32 4
  %54 = bitcast i8** %53 to i64*
  %55 = load i64, i64* %54, align 8, !tbaa !20396
  %56 = getelementptr inbounds %class.Packet, %class.Packet* %52, i64 0, i32 3
  %57 = bitcast i8** %56 to i64*
  %58 = load i64, i64* %57, align 8, !tbaa !20399
  %59 = sub i64 %55, %58
  %60 = and i64 %59, 4294967295
  %61 = add i64 %60, %51
  %62 = getelementptr inbounds %class.Packet, %class.Packet* %52, i64 0, i32 6, i32 6
  %63 = load %class.Packet*, %class.Packet** %62, align 8, !tbaa !20284
  %64 = icmp eq %class.Packet* %63, null
  br i1 %64, label %.loopexit, label %50

65:                                               ; preds = %42
  %66 = load volatile i64, i64* %16, align 16, !tbaa !20964
  %67 = sub i64 %15, %66
  %68 = icmp ugt i64 %67, 1000
  br i1 %68, label %69, label %81, !prof !20322, !misexpect !20323

69:                                               ; preds = %65
  %70 = load volatile i64, i64* %44, align 16, !tbaa !20964
  %71 = mul i64 %70, 1000
  %72 = load volatile i64, i64* %16, align 16, !tbaa !20964
  %73 = sub i64 %15, %72
  %74 = udiv i64 %71, %73
  %75 = zext i32 %48 to i64
  %76 = icmp ugt i64 %74, %75
  br i1 %76, label %77, label %81

77:                                               ; preds = %69
  tail call void (i8*, ...) @click_chatter(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.15.6094, i64 0, i64 0), %class.AverageCounterBase.21* nonnull %0, i64 %74)
  store i32 0, i32* %47, align 8, !tbaa !25116
  store volatile i64 0, i64* %44, align 16, !tbaa !20964
  store volatile i64 0, i64* %45, align 16, !tbaa !20964
  store volatile i64 0, i64* %16, align 16, !tbaa !20964
  store volatile i64 0, i64* %46, align 16, !tbaa !20964
  br label %81

78:                                               ; preds = %20
  br i1 %29, label %79, label %81

79:                                               ; preds = %78
  %80 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 3, i32 0
  store volatile i64 %15, i64* %80, align 16, !tbaa !20964
  br label %81

81:                                               ; preds = %79, %78, %77, %69, %65, %42
  ret %class.PacketBatch* %1
}

define weak_odr dso_local void @_ZN18AverageCounterBaseI19AverageCounterStatsI15atomic_uint64_tEE32averagecounter_read_rate_handlerEP7ElementPv(%class.String* noalias sret %0, %class.Element* %1, i8* %2) #0 comdat align 2 {
  %4 = getelementptr inbounds %class.Element, %class.Element* %1, i64 1, i32 5, i64 1
  %5 = bitcast %"class.Element::Port"* %4 to i64*
  %6 = load volatile i64, i64* %5, align 16, !tbaa !20964
  %7 = getelementptr inbounds %class.Element, %class.Element* %1, i64 1, i32 5
  %8 = bitcast [4 x %"class.Element::Port"]* %7 to i64*
  %9 = load volatile i64, i64* %8, align 16, !tbaa !20964
  %10 = sub i64 %6, %9
  %11 = ptrtoint i8* %2 to i64
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %class.Element, %class.Element* %1, i64 1, i32 5, i64 2
  %14 = bitcast %"class.Element::Port"* %13 to i64*
  %15 = load i64, i64* %14, align 16, !tbaa !25114
  %16 = sub i64 %10, %15
  %17 = icmp eq i64 %16, 0
  %18 = select i1 %17, i64 1, i64 %16
  switch i32 %12, label %42 [
    i32 3, label %19
    i32 2, label %33
    i32 1, label %38
  ]

19:                                               ; preds = %3
  %20 = getelementptr inbounds %class.Element, %class.Element* %1, i64 1, i32 4
  %21 = bitcast [2 x %"class.Element::Port"*]* %20 to i64*
  %22 = load volatile i64, i64* %21, align 16, !tbaa !20964
  %23 = getelementptr inbounds %class.Element, %class.Element* %1, i64 1
  %24 = bitcast %class.Element* %23 to i64*
  %25 = load volatile i64, i64* %24, align 16, !tbaa !20964
  %26 = getelementptr inbounds %class.Element, %class.Element* %1, i64 0, i32 12, i64 0
  %27 = load i8, i8* %26, align 1, !tbaa !25111, !range !20292
  %28 = icmp eq i8 %27, 0
  %29 = select i1 %28, i64 20, i64 24
  %30 = mul i64 %29, %25
  %31 = add i64 %30, %22
  %32 = shl i64 %31, 3
  br label %49

33:                                               ; preds = %3
  %34 = getelementptr inbounds %class.Element, %class.Element* %1, i64 1, i32 4
  %35 = bitcast [2 x %"class.Element::Port"*]* %34 to i64*
  %36 = load volatile i64, i64* %35, align 16, !tbaa !20964
  %37 = shl i64 %36, 3
  br label %49

38:                                               ; preds = %3
  %39 = getelementptr inbounds %class.Element, %class.Element* %1, i64 1, i32 4
  %40 = bitcast [2 x %"class.Element::Port"*]* %39 to i64*
  %41 = load volatile i64, i64* %40, align 16, !tbaa !20964
  br label %49

42:                                               ; preds = %3
  %43 = getelementptr inbounds %class.Element, %class.Element* %1, i64 1
  %44 = bitcast %class.Element* %43 to i64*
  %45 = load volatile i64, i64* %44, align 16, !tbaa !20964
  %46 = icmp eq i32 %12, 4
  br i1 %46, label %47, label %49

47:                                               ; preds = %42
  %48 = uitofp i64 %18 to double
  br label %54

49:                                               ; preds = %42, %38, %33, %19
  %50 = phi i64 [ %45, %42 ], [ %32, %19 ], [ %37, %33 ], [ %41, %38 ]
  %51 = uitofp i64 %50 to double
  %52 = fmul double %51, 1.000000e+03
  %53 = uitofp i64 %18 to double
  br label %54

54:                                               ; preds = %49, %47
  %55 = phi double [ %53, %49 ], [ 1.000000e+03, %47 ]
  %56 = phi double [ %52, %49 ], [ %48, %47 ]
  %57 = fdiv double %56, %55
  tail call void @_ZN6StringC2Ed(%class.String* %0, double %57)
  ret void
}

define weak_odr dso_local void @_ZN18AverageCounterBaseI19AverageCounterStatsI15atomic_uint64_tEEC2Ev(%class.AverageCounterBase.21* %0) unnamed_addr #0 comdat($_ZN18AverageCounterBaseI19AverageCounterStatsI15atomic_uint64_tEEC5Ev) align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 0, i32 0, i32 2
  store i8 0, i8* %4, align 4, !tbaa !20277
  %5 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 0, i32 0, i32 5, i64 0
  %6 = getelementptr inbounds %"class.Element::Port", %"class.Element::Port"* %5, i64 0, i32 0
  store %class.Element* null, %class.Element** %6, align 8, !tbaa !20278
  %7 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 0, i32 0, i32 5, i64 0, i32 1
  store i32 -2, i32* %7, align 8, !tbaa !20280
  %8 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 0, i32 0, i32 5, i64 1, i32 0
  store %class.Element* null, %class.Element** %8, align 8, !tbaa !20278
  %9 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 0, i32 0, i32 5, i64 1, i32 1
  store i32 -2, i32* %9, align 8, !tbaa !20280
  %10 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 0, i32 0, i32 5, i64 2, i32 0
  store %class.Element* null, %class.Element** %10, align 8, !tbaa !20278
  %11 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 0, i32 0, i32 5, i64 2, i32 1
  store i32 -2, i32* %11, align 8, !tbaa !20280
  %12 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 0, i32 0, i32 5, i64 3, i32 0
  store %class.Element* null, %class.Element** %12, align 8, !tbaa !20278
  %13 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 0, i32 0, i32 5, i64 3, i32 1
  store i32 -2, i32* %13, align 8, !tbaa !20280
  %14 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 0, i32 0, i32 7
  store %class.Router* null, %class.Router** %14, align 8, !tbaa !20281
  %15 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 0, i32 0, i32 8
  store i32 -1, i32* %15, align 8, !tbaa !20282
  %16 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 0, i32 0, i32 10
  %17 = bitcast %class.Vector* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(17) %17, i8 0, i64 17, i1 false) #34
  %18 = load i32, i32* @_ZN7Element19nelements_allocatedE, align 4, !tbaa !20283
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* @_ZN7Element19nelements_allocatedE, align 4, !tbaa !20283
  %20 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 0, i32 0, i32 4, i64 1
  store %"class.Element::Port"* %5, %"class.Element::Port"** %20, align 8, !tbaa !20284
  %21 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 0, i32 0, i32 4, i64 0
  store %"class.Element::Port"* %5, %"class.Element::Port"** %21, align 8, !tbaa !20284
  %22 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 0, i32 0, i32 6, i64 1
  store i32 0, i32* %22, align 4, !tbaa !20283
  %23 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 0, i32 0, i32 6, i64 0
  store i32 0, i32* %23, align 8, !tbaa !20283
  store i32 1, i32* %3, align 8, !tbaa !20267
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*] }, { [39 x i8*] }* @_ZTV18AverageCounterBaseI19AverageCounterStatsI15atomic_uint64_tEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 16, !tbaa !20285
  %24 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 0, i32 0
  store volatile i64 0, i64* %24, align 16, !tbaa !20964
  %25 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 1, i32 0
  store volatile i64 0, i64* %25, align 16, !tbaa !20964
  %26 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 2, i32 0
  store volatile i64 0, i64* %26, align 16, !tbaa !20964
  %27 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 3, i32 0
  store volatile i64 0, i64* %27, align 16, !tbaa !20964
  %28 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 1
  store i8 1, i8* %28, align 1, !tbaa !25111
  ret void
}

define internal void @_ZN18AverageCounterBaseI19AverageCounterStatsI15atomic_uint64_tEED0Ev(%class.AverageCounterBase.21* nocapture readnone %0) unnamed_addr #24 comdat align 2 {
  tail call void @llvm.trap() #57
  unreachable
}

define dso_local void @_ZN17AverageCounterIMPC2Ev(%class.AverageCounterIMP* %0) unnamed_addr #2 align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i8 0, i8* %4, align 4, !tbaa !20277
  %5 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 0
  %6 = getelementptr inbounds %"class.Element::Port", %"class.Element::Port"* %5, i64 0, i32 0
  store %class.Element* null, %class.Element** %6, align 8, !tbaa !20278
  %7 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 0, i32 1
  store i32 -2, i32* %7, align 8, !tbaa !20280
  %8 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 1, i32 0
  store %class.Element* null, %class.Element** %8, align 8, !tbaa !20278
  %9 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 1, i32 1
  store i32 -2, i32* %9, align 8, !tbaa !20280
  %10 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 2, i32 0
  store %class.Element* null, %class.Element** %10, align 8, !tbaa !20278
  %11 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 2, i32 1
  store i32 -2, i32* %11, align 8, !tbaa !20280
  %12 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 3, i32 0
  store %class.Element* null, %class.Element** %12, align 8, !tbaa !20278
  %13 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 3, i32 1
  store i32 -2, i32* %13, align 8, !tbaa !20280
  %14 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 7
  store %class.Router* null, %class.Router** %14, align 8, !tbaa !20281
  %15 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 8
  store i32 -1, i32* %15, align 8, !tbaa !20282
  %16 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 10
  %17 = bitcast %class.Vector* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(17) %17, i8 0, i64 17, i1 false) #34
  %18 = load i32, i32* @_ZN7Element19nelements_allocatedE, align 4, !tbaa !20283
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* @_ZN7Element19nelements_allocatedE, align 4, !tbaa !20283
  %20 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 4, i64 1
  store %"class.Element::Port"* %5, %"class.Element::Port"** %20, align 8, !tbaa !20284
  %21 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 4, i64 0
  store %"class.Element::Port"* %5, %"class.Element::Port"** %21, align 8, !tbaa !20284
  %22 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i64 1
  store i32 0, i32* %22, align 4, !tbaa !20283
  %23 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i64 0
  store i32 0, i32* %23, align 8, !tbaa !20283
  store i32 1, i32* %3, align 8, !tbaa !20267
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*] }, { [39 x i8*] }* @_ZTV18AverageCounterBaseI22AverageCounterStatsIMPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !20285
  %24 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 3
  %25 = load i32, i32* @click_nthreads, align 4, !tbaa !20283
  %26 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  store i32 %25, i32* %26, align 8, !tbaa !25118
  %27 = zext i32 %25 to i64
  %28 = shl nuw nsw i64 %27, 6
  %29 = tail call noalias i8* @aligned_alloc(i64 64, i64 %28) #34
  %30 = load i32, i32* %26, align 8, !tbaa !25118
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %1
  %33 = zext i32 %30 to i64
  %34 = shl nuw nsw i64 %33, 6
  tail call void @llvm.memset.p0i8.i64(i8* align 64 %29, i8 0, i64 %34, i1 false)
  br label %35

35:                                               ; preds = %32, %1
  %36 = bitcast %struct.AverageCounterStatsIMP* %24 to i8**
  store i8* %29, i8** %36, align 8, !tbaa !25120
  %37 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 1
  store i8 1, i8* %37, align 1, !tbaa !25121
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*] }, { [39 x i8*] }* @_ZTV17AverageCounterIMP, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !20285
  ret void
}

define internal void @_ZN18AverageCounterBaseI22AverageCounterStatsIMPED2Ev(%class.AverageCounterBase.23* %0) unnamed_addr #7 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*] }, { [39 x i8*] }* @_ZTV18AverageCounterBaseI22AverageCounterStatsIMPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !20285
  %3 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 3, i32 0, i32 1
  %4 = load i32, i32* %3, align 8, !tbaa !25118
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 3
  %8 = bitcast %struct.AverageCounterStatsIMP* %7 to i8**
  %9 = load i8*, i8** %8, align 8, !tbaa !25120
  tail call void @free(i8* %9) #34
  store i32 0, i32* %3, align 8, !tbaa !25118
  br label %10

10:                                               ; preds = %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*] }, { [38 x i8*] }* @_ZTV7Element, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !20285
  %11 = load i32, i32* @_ZN7Element19nelements_allocatedE, align 4, !tbaa !20283
  %12 = add nsw i32 %11, -1
  store i32 %12, i32* @_ZN7Element19nelements_allocatedE, align 4, !tbaa !20283
  %13 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 4, i64 0
  %14 = load %"class.Element::Port"*, %"class.Element::Port"** %13, align 8, !tbaa !20284
  %15 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 5, i64 0
  %16 = icmp uge %"class.Element::Port"* %14, %15
  %17 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 6
  %18 = bitcast [2 x i32]* %17 to %"class.Element::Port"*
  %19 = icmp ule %"class.Element::Port"* %14, %18
  %20 = and i1 %19, %16
  %21 = icmp eq %"class.Element::Port"* %14, null
  %22 = or i1 %21, %20
  br i1 %22, label %25, label %23

23:                                               ; preds = %10
  %24 = bitcast %"class.Element::Port"* %14 to i8*
  tail call void @_ZdaPv(i8* %24) #55
  br label %25

25:                                               ; preds = %23, %10
  %26 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 4, i64 1
  %27 = load %"class.Element::Port"*, %"class.Element::Port"** %26, align 8, !tbaa !20284
  %28 = icmp uge %"class.Element::Port"* %27, %15
  %29 = icmp ule %"class.Element::Port"* %27, %18
  %30 = and i1 %29, %28
  %31 = icmp eq %"class.Element::Port"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %35, label %33

33:                                               ; preds = %25
  %34 = bitcast %"class.Element::Port"* %27 to i8*
  tail call void @_ZdaPv(i8* %34) #55
  br label %35

35:                                               ; preds = %33, %25
  %36 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 10
  %37 = bitcast %class.Vector* %36 to i8**
  %38 = load i8*, i8** %37, align 8, !tbaa !20288
  %39 = icmp eq i8* %38, null
  br i1 %39, label %_ZN12BatchElementD2Ev.exit, label %40

40:                                               ; preds = %35
  tail call void @_ZdaPv(i8* nonnull %38) #55
  br label %_ZN12BatchElementD2Ev.exit

_ZN12BatchElementD2Ev.exit:                       ; preds = %40, %35
  ret void
}

define internal void @_ZN17AverageCounterIMPD0Ev(%class.AverageCounterIMP* %0) unnamed_addr #7 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*] }, { [39 x i8*] }* @_ZTV18AverageCounterBaseI22AverageCounterStatsIMPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !20285
  %3 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %4 = load i32, i32* %3, align 8, !tbaa !25118
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 3
  %8 = bitcast %struct.AverageCounterStatsIMP* %7 to i8**
  %9 = load i8*, i8** %8, align 8, !tbaa !25120
  tail call void @free(i8* %9) #34
  store i32 0, i32* %3, align 8, !tbaa !25118
  br label %10

10:                                               ; preds = %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*] }, { [38 x i8*] }* @_ZTV7Element, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !20285
  %11 = load i32, i32* @_ZN7Element19nelements_allocatedE, align 4, !tbaa !20283
  %12 = add nsw i32 %11, -1
  store i32 %12, i32* @_ZN7Element19nelements_allocatedE, align 4, !tbaa !20283
  %13 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 4, i64 0
  %14 = load %"class.Element::Port"*, %"class.Element::Port"** %13, align 8, !tbaa !20284
  %15 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i64 0
  %16 = icmp uge %"class.Element::Port"* %14, %15
  %17 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %18 = bitcast [2 x i32]* %17 to %"class.Element::Port"*
  %19 = icmp ule %"class.Element::Port"* %14, %18
  %20 = and i1 %19, %16
  %21 = icmp eq %"class.Element::Port"* %14, null
  %22 = or i1 %21, %20
  br i1 %22, label %25, label %23

23:                                               ; preds = %10
  %24 = bitcast %"class.Element::Port"* %14 to i8*
  tail call void @_ZdaPv(i8* %24) #55
  br label %25

25:                                               ; preds = %23, %10
  %26 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 4, i64 1
  %27 = load %"class.Element::Port"*, %"class.Element::Port"** %26, align 8, !tbaa !20284
  %28 = icmp uge %"class.Element::Port"* %27, %15
  %29 = icmp ule %"class.Element::Port"* %27, %18
  %30 = and i1 %29, %28
  %31 = icmp eq %"class.Element::Port"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %35, label %33

33:                                               ; preds = %25
  %34 = bitcast %"class.Element::Port"* %27 to i8*
  tail call void @_ZdaPv(i8* %34) #55
  br label %35

35:                                               ; preds = %33, %25
  %36 = getelementptr inbounds %class.AverageCounterIMP, %class.AverageCounterIMP* %0, i64 0, i32 0, i32 0, i32 0, i32 10
  %37 = bitcast %class.Vector* %36 to i8**
  %38 = load i8*, i8** %37, align 8, !tbaa !20288
  %39 = icmp eq i8* %38, null
  br i1 %39, label %_ZN12BatchElementD2Ev.exit, label %40

40:                                               ; preds = %35
  tail call void @_ZdaPv(i8* nonnull %38) #55
  br label %_ZN12BatchElementD2Ev.exit

_ZN12BatchElementD2Ev.exit:                       ; preds = %40, %35
  ret void
}

define weak_odr dso_local %class.Packet* @_ZN18AverageCounterBaseI22AverageCounterStatsIMPE13simple_actionEP6Packet(%class.AverageCounterBase.23* %0, %class.Packet* %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %struct.timespec, align 8
  %4 = bitcast %struct.timespec* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #34
  %5 = call i32 @clock_gettime(i32 1, %struct.timespec* nonnull %3) #34
  %6 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i64 0, i32 0
  %7 = load i64, i64* %6, align 8, !tbaa !20557
  %8 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i64 0, i32 1
  %9 = load i64, i64* %8, align 8, !tbaa !20559
  %10 = shl i64 %7, 32
  %11 = ashr exact i64 %10, 32
  %12 = mul nsw i64 %11, 1000000000
  %13 = and i64 %9, 4294967295
  %14 = add nsw i64 %12, %13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #34
  %15 = sdiv i64 %14, 1000000
  %16 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 3, i32 0, i32 0
  %17 = load %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"*, %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"** %16, align 8, !tbaa !25120
  %18 = load i32, i32* @click_current_thread_id, align 4, !tbaa !20283
  %19 = and i32 %18, 65535
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, i64 %20, i32 0, i32 2
  %22 = load i64, i64* %21, align 8, !tbaa !25124
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %2
  store i64 %15, i64* %21, align 8, !tbaa !25124
  br label %25

25:                                               ; preds = %24, %2
  %26 = phi i64 [ %15, %24 ], [ %22, %2 ]
  %27 = sub i64 %15, %26
  %28 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 4
  %29 = load i64, i64* %28, align 8, !tbaa !25126
  %30 = icmp ult i64 %27, %29
  br i1 %30, label %45, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %class.Packet, %class.Packet* %1, i64 0, i32 4
  %33 = bitcast i8** %32 to i64*
  %34 = load i64, i64* %33, align 8, !tbaa !20396
  %35 = getelementptr inbounds %class.Packet, %class.Packet* %1, i64 0, i32 3
  %36 = bitcast i8** %35 to i64*
  %37 = load i64, i64* %36, align 8, !tbaa !20399
  %38 = sub i64 %34, %37
  %39 = and i64 %38, 4294967295
  %40 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, i64 %20, i32 0, i32 0
  %41 = bitcast i64* %40 to <2 x i64>*
  %42 = load <2 x i64>, <2 x i64>* %41, align 8, !tbaa !20341
  %43 = insertelement <2 x i64> <i64 1, i64 undef>, i64 %39, i32 1
  %44 = add <2 x i64> %42, %43
  store <2 x i64> %44, <2 x i64>* %41, align 8, !tbaa !20341
  br label %45

45:                                               ; preds = %31, %25
  %46 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, i64 %20, i32 0, i32 3
  store i64 %15, i64* %46, align 8, !tbaa !25127
  ret %class.Packet* %1
}

define internal i8* @_ZNK17AverageCounterIMP10class_nameEv(%class.AverageCounterIMP* nocapture readnone %0) unnamed_addr #4 comdat align 2 {
  ret i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.224.13228, i64 0, i64 0)
}

define weak_odr dso_local i8* @_ZNK18AverageCounterBaseI22AverageCounterStatsIMPE10port_countEv(%class.AverageCounterBase.23* %0) unnamed_addr #2 comdat align 2 {
  ret i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZN7Element9PORTS_1_1E, i64 0, i64 0)
}

define weak_odr dso_local i32 @_ZN18AverageCounterBaseI22AverageCounterStatsIMPE9configureER6VectorI6StringLm16EEP12ErrorHandler(%class.AverageCounterBase.23* %0, %class.Vector.0* dereferenceable(16) %1, %class.ErrorHandler* %2) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca double, align 8
  %7 = alloca %class.Args, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #34
  store i32 0, i32* %4, align 4, !tbaa !20283
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #34
  store i32 0, i32* %5, align 4, !tbaa !20283
  %12 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #34
  store double 0.000000e+00, double* %6, align 8, !tbaa !21519
  %13 = bitcast %class.Args* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %13) #34
  %14 = bitcast %class.Args* %7 to %class.AverageCounterBase.23**
  store %class.AverageCounterBase.23* %0, %class.AverageCounterBase.23** %14, align 8, !tbaa !20294
  %15 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 0, i32 1
  store %class.ErrorHandler* %2, %class.ErrorHandler** %15, align 8, !tbaa !20296
  %16 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 0, i32 2
  store i8* null, i8** %16, align 8, !tbaa !20297
  %17 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 0, i32 3
  store i8 0, i8* %17, align 8, !tbaa !20298
  %18 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 5
  %19 = bitcast %class.Vector.2* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %19, i8 0, i64 16, i1 false) #34
  invoke void @_ZN4Args10initializeEPK6VectorI6StringLm16EE(%class.Args* nonnull %7, %class.Vector.0* nonnull %1)
          to label %_ZN4ArgsC2ERK6VectorI6StringLm16EEPK7ElementP12ErrorHandler.exit unwind label %20

20:                                               ; preds = %3
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = bitcast %class.Vector.2* %18 to i8**
  %23 = load i8*, i8** %22, align 8, !tbaa !20299
  %24 = icmp eq i8* %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %20
  call void @_ZdaPv(i8* nonnull %23) #55
  br label %26

26:                                               ; preds = %25, %20
  resume { i8*, i32 } %21

_ZN4ArgsC2ERK6VectorI6StringLm16EEPK7ElementP12ErrorHandler.exit: ; preds = %3
  invoke fastcc void @_Z14args_base_readIdEvP4ArgsPKciRT_(%class.Args* nonnull %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19.14705, i64 0, i64 0), i32 2, double* nonnull dereferenceable(8) %6)
          to label %27 unwind label %93

27:                                               ; preds = %_ZN4ArgsC2ERK6VectorI6StringLm16EEPK7ElementP12ErrorHandler.exit
  %28 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 1
  invoke void @_Z14args_base_readIbEvP4ArgsPKciRT_(%class.Args* nonnull %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.6107, i64 0, i64 0), i32 2, i8* nonnull dereferenceable(1) %28)
          to label %29 unwind label %93

29:                                               ; preds = %27
  %30 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #34
  store i32 0, i32* %8, align 4, !tbaa !20283
  invoke fastcc void @_Z21args_base_read_or_setIjiEvP4ArgsPKciRT_RKT0_(%class.Args* nonnull %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7501, i64 0, i64 0), i32 0, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %8)
          to label %31 unwind label %97

31:                                               ; preds = %29
  %32 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #34
  store i32 0, i32* %9, align 4, !tbaa !20283
  invoke fastcc void @_Z21args_base_read_or_setIjiEvP4ArgsPKciRT_RKT0_(%class.Args* nonnull %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.6109, i64 0, i64 0), i32 0, i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %9)
          to label %33 unwind label %.loopexit.split-lp

33:                                               ; preds = %31
  invoke void @_ZN4Args14check_completeEv(%class.Args* nonnull %7)
          to label %.noexc unwind label %.loopexit.split-lp

.noexc:                                           ; preds = %33
  %34 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 2
  %35 = load i8, i8* %34, align 2, !tbaa !20301, !range !20292
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %_ZN4Args8completeEv.exit, label %37

37:                                               ; preds = %.noexc
  %38 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 6
  %39 = load %"struct.Args::Slot"*, %"struct.Args::Slot"** %38, align 8, !tbaa !20304
  %40 = icmp eq %"struct.Args::Slot"* %39, null
  br i1 %40, label %.loopexit3, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.Args::Slot"** %38 to i64*
  br label %46

.loopexit3:                                       ; preds = %.noexc1, %37
  %43 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 3
  %44 = load i8, i8* %43, align 1, !tbaa !20305
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %.loopexit, label %.preheader

46:                                               ; preds = %.noexc1, %41
  %47 = phi %"struct.Args::Slot"* [ %39, %41 ], [ %58, %.noexc1 ]
  %48 = getelementptr inbounds %"struct.Args::Slot", %"struct.Args::Slot"* %47, i64 0, i32 1
  %49 = bitcast %"struct.Args::Slot"** %48 to i64*
  %50 = load i64, i64* %49, align 8, !tbaa !20306
  store i64 %50, i64* %42, align 8, !tbaa !20304
  %51 = bitcast %"struct.Args::Slot"* %47 to void (%"struct.Args::Slot"*)***
  %52 = load void (%"struct.Args::Slot"*)**, void (%"struct.Args::Slot"*)*** %51, align 8, !tbaa !20285
  %53 = getelementptr inbounds void (%"struct.Args::Slot"*)*, void (%"struct.Args::Slot"*)** %52, i64 2
  %54 = load void (%"struct.Args::Slot"*)*, void (%"struct.Args::Slot"*)** %53, align 8
  invoke void %54(%"struct.Args::Slot"* nonnull %47)
          to label %.noexc1 unwind label %.loopexit2

.noexc1:                                          ; preds = %46
  %55 = load void (%"struct.Args::Slot"*)**, void (%"struct.Args::Slot"*)*** %51, align 8, !tbaa !20285
  %56 = getelementptr inbounds void (%"struct.Args::Slot"*)*, void (%"struct.Args::Slot"*)** %55, i64 1
  %57 = load void (%"struct.Args::Slot"*)*, void (%"struct.Args::Slot"*)** %56, align 8
  call void %57(%"struct.Args::Slot"* nonnull %47) #34
  %58 = load %"struct.Args::Slot"*, %"struct.Args::Slot"** %38, align 8, !tbaa !20304
  %59 = icmp eq %"struct.Args::Slot"* %58, null
  br i1 %59, label %.loopexit3, label %46

.loopexit:                                        ; preds = %.preheader, %.loopexit3
  %60 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 7, i64 0
  store i8 0, i8* %60, align 8, !tbaa !20287
  store i8 0, i8* %43, align 1, !tbaa !20305
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #34
  call void @_ZN4ArgsD2Ev(%class.Args* nonnull %7) #34
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %13) #34
  %61 = load double, double* %6, align 8, !tbaa !21519
  %62 = fmul double %61, 1.000000e+03
  %63 = fptoui double %62 to i64
  %64 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 4
  store i64 %63, i64* %64, align 8, !tbaa !25126
  %65 = load i32, i32* %4, align 4, !tbaa !20283
  %66 = icmp eq i32 %65, 0
  %67 = mul i32 %65, 1000
  %68 = select i1 %66, i32 -1, i32 %67
  %69 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 6
  store i32 %68, i32* %69, align 4
  %70 = load i32, i32* %5, align 4, !tbaa !20283
  %71 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 5
  store i32 %70, i32* %71, align 8, !tbaa !25128
  br label %112

.preheader:                                       ; preds = %.preheader, %.loopexit3
  %72 = phi i32 [ %89, %.preheader ], [ 0, %.loopexit3 ]
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 7, i64 %73
  %75 = load i8, i8* %74, align 1, !tbaa !20287
  %76 = zext i8 %75 to i32
  %77 = add nuw nsw i32 %72, 1
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 7, i64 %78
  %80 = add nuw nsw i32 %77, %76
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %class.Args, %class.Args* %7, i64 0, i32 7, i64 %81
  %83 = bitcast i8* %82 to i8**
  %84 = load i8*, i8** %83, align 8, !tbaa !20284
  %85 = zext i8 %75 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* nonnull align 1 %79, i64 %85, i1 false)
  %86 = load i8, i8* %74, align 1, !tbaa !20287
  %87 = zext i8 %86 to i32
  %88 = add i32 %72, 9
  %89 = add i32 %88, %87
  %90 = load i8, i8* %43, align 1, !tbaa !20305
  %91 = zext i8 %90 to i32
  %92 = icmp ult i32 %89, %91
  br i1 %92, label %.preheader, label %.loopexit

_ZN4Args8completeEv.exit:                         ; preds = %.noexc
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #34
  call void @_ZN4ArgsD2Ev(%class.Args* nonnull %7) #34
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %13) #34
  br label %112

93:                                               ; preds = %27, %_ZN4ArgsC2ERK6VectorI6StringLm16EEPK7ElementP12ErrorHandler.exit
  %94 = landingpad { i8*, i32 }
          cleanup
  %95 = extractvalue { i8*, i32 } %94, 0
  %96 = extractvalue { i8*, i32 } %94, 1
  br label %107

97:                                               ; preds = %29
  %98 = landingpad { i8*, i32 }
          cleanup
  %99 = extractvalue { i8*, i32 } %98, 0
  %100 = extractvalue { i8*, i32 } %98, 1
  br label %104

.loopexit2:                                       ; preds = %46
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %101

.loopexit.split-lp:                               ; preds = %33, %31
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %101

101:                                              ; preds = %.loopexit.split-lp, %.loopexit2
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %.loopexit2 ], [ %lpad.loopexit.split-lp, %.loopexit.split-lp ]
  %102 = extractvalue { i8*, i32 } %lpad.phi, 0
  %103 = extractvalue { i8*, i32 } %lpad.phi, 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #34
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %102, %101 ], [ %99, %97 ]
  %106 = phi i32 [ %103, %101 ], [ %100, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #34
  br label %107

107:                                              ; preds = %104, %93
  %108 = phi i8* [ %105, %104 ], [ %95, %93 ]
  %109 = phi i32 [ %106, %104 ], [ %96, %93 ]
  call void @_ZN4ArgsD2Ev(%class.Args* nonnull %7) #34
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %13) #34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #34
  %110 = insertvalue { i8*, i32 } undef, i8* %108, 0
  %111 = insertvalue { i8*, i32 } %110, i32 %109, 1
  resume { i8*, i32 } %111

112:                                              ; preds = %_ZN4Args8completeEv.exit, %.loopexit
  %113 = phi i32 [ 0, %.loopexit ], [ -1, %_ZN4Args8completeEv.exit ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #34
  ret i32 %113
}

define weak_odr dso_local void @_ZN18AverageCounterBaseI22AverageCounterStatsIMPE12add_handlersEv(%class.AverageCounterBase.23* %0) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.AverageCounterBase.23* %0 to %class.Element*
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27.12883, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZL33averagecounter_read_count_handlerI22AverageCounterStatsIMPE6StringP7ElementPv, i32 0, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7.11527, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZL33averagecounter_read_count_handlerI22AverageCounterStatsIMPE6StringP7ElementPv, i32 1, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6.6097, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZL33averagecounter_read_count_handlerI22AverageCounterStatsIMPE6StringP7ElementPv, i32 2, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7.6098, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZL33averagecounter_read_count_handlerI22AverageCounterStatsIMPE6StringP7ElementPv, i32 3, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.11737, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZN18AverageCounterBaseI22AverageCounterStatsIMPE32averagecounter_read_rate_handlerEP7ElementPv, i32 0, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6.6953, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZN18AverageCounterBaseI22AverageCounterStatsIMPE32averagecounter_read_rate_handlerEP7ElementPv, i32 1, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25.6432, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZN18AverageCounterBaseI22AverageCounterStatsIMPE32averagecounter_read_rate_handlerEP7ElementPv, i32 2, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11.6102, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZN18AverageCounterBaseI22AverageCounterStatsIMPE32averagecounter_read_rate_handlerEP7ElementPv, i32 3, i32 0)
  tail call void @_ZN7Element16add_read_handlerEPKcPF6StringPS_PvEij(%class.Element* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49.13466, i64 0, i64 0), void (%class.String*, %class.Element*, i8*)* nonnull @_ZN18AverageCounterBaseI22AverageCounterStatsIMPE32averagecounter_read_rate_handlerEP7ElementPv, i32 4, i32 0)
  tail call void @_ZN7Element17add_write_handlerEPKcPFiRK6StringPS_PvP12ErrorHandlerEij(%class.Element* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38.12499, i64 0, i64 0), i32 (%class.String*, %class.Element*, i8*, %class.ErrorHandler*)* nonnull @_ZL34averagecounter_reset_write_handlerI22AverageCounterStatsIMPEiRK6StringP7ElementPvP12ErrorHandler, i32 0, i32 8192)
  tail call void @_ZN7Element17add_write_handlerEPKcPFiRK6StringPS_PvP12ErrorHandlerEij(%class.Element* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14.6105, i64 0, i64 0), i32 (%class.String*, %class.Element*, i8*, %class.ErrorHandler*)* nonnull @_ZL34averagecounter_reset_write_handlerI22AverageCounterStatsIMPEiRK6StringP7ElementPvP12ErrorHandler, i32 1, i32 8192)
  ret void
}

define weak_odr dso_local i32 @_ZN18AverageCounterBaseI22AverageCounterStatsIMPE10initializeEP12ErrorHandler(%class.AverageCounterBase.23* %0, %class.ErrorHandler* %1) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 3, i32 0, i32 1
  %4 = load i32, i32* %3, align 8, !tbaa !25118
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %.loopexit, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"*, %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"** %7, align 8, !tbaa !25120
  %9 = add i32 %4, -1
  %10 = and i32 %4, 7
  %11 = icmp ult i32 %9, 7
  br i1 %11, label %51, label %12

12:                                               ; preds = %6
  %13 = sub i32 %4, %10
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i32 [ 0, %12 ], [ %47, %14 ]
  %16 = phi i32 [ %13, %12 ], [ %49, %14 ]
  %17 = sext i32 %15 to i64
  %18 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %8, i64 %17, i32 0, i32 0
  %19 = or i32 %15, 1
  %20 = bitcast i64* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %20, i8 0, i64 32, i1 false)
  %21 = sext i32 %19 to i64
  %22 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %8, i64 %21, i32 0, i32 0
  %23 = or i32 %15, 2
  %24 = bitcast i64* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %24, i8 0, i64 32, i1 false)
  %25 = sext i32 %23 to i64
  %26 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %8, i64 %25, i32 0, i32 0
  %27 = or i32 %15, 3
  %28 = bitcast i64* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %28, i8 0, i64 32, i1 false)
  %29 = sext i32 %27 to i64
  %30 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %8, i64 %29, i32 0, i32 0
  %31 = or i32 %15, 4
  %32 = bitcast i64* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %32, i8 0, i64 32, i1 false)
  %33 = sext i32 %31 to i64
  %34 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %8, i64 %33, i32 0, i32 0
  %35 = or i32 %15, 5
  %36 = bitcast i64* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %36, i8 0, i64 32, i1 false)
  %37 = sext i32 %35 to i64
  %38 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %8, i64 %37, i32 0, i32 0
  %39 = or i32 %15, 6
  %40 = bitcast i64* %38 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %40, i8 0, i64 32, i1 false)
  %41 = sext i32 %39 to i64
  %42 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %8, i64 %41, i32 0, i32 0
  %43 = or i32 %15, 7
  %44 = bitcast i64* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %44, i8 0, i64 32, i1 false)
  %45 = sext i32 %43 to i64
  %46 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %8, i64 %45, i32 0, i32 0
  %47 = add nuw i32 %15, 8
  %48 = bitcast i64* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %48, i8 0, i64 32, i1 false)
  %49 = add i32 %16, -8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %.loopexit2, label %14

.loopexit2:                                       ; preds = %14
  %phitmp = sext i32 %47 to i64
  br label %51

51:                                               ; preds = %.loopexit2, %6
  %52 = phi i64 [ 0, %6 ], [ %phitmp, %.loopexit2 ]
  %53 = icmp eq i32 %10, 0
  br i1 %53, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %.preheader, %51
  %indvars.iv = phi i64 [ %indvars.iv.next, %.preheader ], [ %52, %51 ]
  %54 = phi i32 [ %57, %.preheader ], [ %10, %51 ]
  %55 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %8, i64 %indvars.iv, i32 0, i32 0
  %56 = bitcast i64* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %56, i8 0, i64 32, i1 false)
  %57 = add nsw i32 %54, -1
  %58 = icmp eq i32 %57, 0
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  br i1 %58, label %.loopexit, label %.preheader, !llvm.loop !25129

.loopexit:                                        ; preds = %.preheader, %51, %2
  ret i32 0
}

define weak_odr dso_local %class.PacketBatch* @_ZN18AverageCounterBaseI22AverageCounterStatsIMPE19simple_action_batchEP11PacketBatch(%class.AverageCounterBase.23* %0, %class.PacketBatch* %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %struct.timespec, align 8
  %4 = bitcast %struct.timespec* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #34
  %5 = call i32 @clock_gettime(i32 1, %struct.timespec* nonnull %3) #34
  %6 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i64 0, i32 0
  %7 = load i64, i64* %6, align 8, !tbaa !20557
  %8 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i64 0, i32 1
  %9 = load i64, i64* %8, align 8, !tbaa !20559
  %10 = shl i64 %7, 32
  %11 = ashr exact i64 %10, 32
  %12 = mul nsw i64 %11, 1000000000
  %13 = and i64 %9, 4294967295
  %14 = add nsw i64 %12, %13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #34
  %15 = sdiv i64 %14, 1000000
  %16 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 3, i32 0, i32 0
  %17 = load %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"*, %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"** %16, align 8, !tbaa !25120
  %18 = load i32, i32* @click_current_thread_id, align 4, !tbaa !20283
  %19 = and i32 %18, 65535
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, i64 %20, i32 0, i32 2
  %22 = load i64, i64* %21, align 8, !tbaa !25124
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %2
  store i64 %15, i64* %21, align 8, !tbaa !25124
  br label %25

25:                                               ; preds = %24, %2
  %26 = phi i64 [ %15, %24 ], [ %22, %2 ]
  %27 = sub i64 %15, %26
  %28 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 4
  %29 = load i64, i64* %28, align 8, !tbaa !25126
  %30 = icmp uge i64 %27, %29
  %31 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 6
  %32 = load i32, i32* %31, align 4, !tbaa !25130
  %33 = zext i32 %32 to i64
  %34 = icmp ult i64 %27, %33
  %35 = and i1 %30, %34
  br i1 %35, label %36, label %309, !prof !21170

36:                                               ; preds = %25
  %37 = icmp eq %class.PacketBatch* %1, null
  br i1 %37, label %.loopexit20, label %38

38:                                               ; preds = %36
  %39 = bitcast %class.PacketBatch* %1 to %class.Packet*
  br label %61

.loopexit20:                                      ; preds = %61, %36
  %40 = phi i64 [ 0, %36 ], [ %72, %61 ]
  %41 = getelementptr inbounds %class.PacketBatch, %class.PacketBatch* %1, i64 48, i32 0
  %42 = getelementptr inbounds i8, i8* %41, i64 24
  %43 = bitcast i8* %42 to i16*
  %44 = load i16, i16* %43, align 2, !tbaa !20287
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %.loopexit20
  tail call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.259.16395, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6.13925, i64 0, i64 0), i32 439, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__PRETTY_FUNCTION__._ZN11PacketBatch5countEv.13926, i64 0, i64 0)) #57
  unreachable

47:                                               ; preds = %.loopexit20
  %48 = zext i16 %44 to i64
  %49 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, i64 %20, i32 0, i32 0
  %50 = bitcast i64* %49 to <2 x i64>*
  %51 = load <2 x i64>, <2 x i64>* %50, align 8, !tbaa !20341
  %52 = insertelement <2 x i64> undef, i64 %48, i32 0
  %53 = insertelement <2 x i64> %52, i64 %40, i32 1
  %54 = add <2 x i64> %51, %53
  store <2 x i64> %54, <2 x i64>* %50, align 8, !tbaa !20341
  %55 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, i64 %20, i32 0, i32 3
  store i64 %15, i64* %55, align 8, !tbaa !25127
  %56 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 5
  %57 = load i32, i32* %56, align 8, !tbaa !25128
  %58 = icmp ne i32 %57, 0
  %59 = icmp ugt i64 %27, 1000
  %60 = and i1 %59, %58
  br i1 %60, label %76, label %.loopexit, !prof !25109

61:                                               ; preds = %61, %38
  %62 = phi i64 [ %72, %61 ], [ 0, %38 ]
  %63 = phi %class.Packet* [ %74, %61 ], [ %39, %38 ]
  %64 = getelementptr inbounds %class.Packet, %class.Packet* %63, i64 0, i32 4
  %65 = bitcast i8** %64 to i64*
  %66 = load i64, i64* %65, align 8, !tbaa !20396
  %67 = getelementptr inbounds %class.Packet, %class.Packet* %63, i64 0, i32 3
  %68 = bitcast i8** %67 to i64*
  %69 = load i64, i64* %68, align 8, !tbaa !20399
  %70 = sub i64 %66, %69
  %71 = and i64 %70, 4294967295
  %72 = add i64 %71, %62
  %73 = getelementptr inbounds %class.Packet, %class.Packet* %63, i64 0, i32 6, i32 6
  %74 = load %class.Packet*, %class.Packet** %73, align 8, !tbaa !20284
  %75 = icmp eq %class.Packet* %74, null
  br i1 %75, label %.loopexit20, label %61

76:                                               ; preds = %47
  %77 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 3, i32 0, i32 1
  %78 = load i32, i32* %77, align 8, !tbaa !25118
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %255, label %80

80:                                               ; preds = %76
  %81 = icmp ult i32 %78, 17
  %82 = add i32 %78, -1
  %83 = icmp slt i32 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %128, label %85

85:                                               ; preds = %80
  %86 = and i32 %78, 15
  %87 = icmp eq i32 %86, 0
  %88 = select i1 %87, i32 16, i32 %86
  %89 = sub i32 %78, %88
  br label %90

90:                                               ; preds = %90, %85
  %91 = phi i32 [ 0, %85 ], [ %116, %90 ]
  %92 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %85 ], [ %117, %90 ]
  %93 = phi <4 x i64> [ zeroinitializer, %85 ], [ %112, %90 ]
  %94 = phi <4 x i64> [ zeroinitializer, %85 ], [ %113, %90 ]
  %95 = phi <4 x i64> [ zeroinitializer, %85 ], [ %114, %90 ]
  %96 = phi <4 x i64> [ zeroinitializer, %85 ], [ %115, %90 ]
  %97 = add <4 x i32> %92, <i32 4, i32 4, i32 4, i32 4>
  %98 = add <4 x i32> %92, <i32 8, i32 8, i32 8, i32 8>
  %99 = add <4 x i32> %92, <i32 12, i32 12, i32 12, i32 12>
  %100 = sext <4 x i32> %92 to <4 x i64>
  %101 = sext <4 x i32> %97 to <4 x i64>
  %102 = sext <4 x i32> %98 to <4 x i64>
  %103 = sext <4 x i32> %99 to <4 x i64>
  %104 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, <4 x i64> %100, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, <4 x i64> %101, i32 0, i32 0
  %106 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, <4 x i64> %102, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, <4 x i64> %103, i32 0, i32 0
  %108 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %104, i32 8, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !25131
  %109 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %105, i32 8, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !25131
  %110 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %106, i32 8, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !25131
  %111 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %107, i32 8, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !25131
  %112 = add <4 x i64> %108, %93
  %113 = add <4 x i64> %109, %94
  %114 = add <4 x i64> %110, %95
  %115 = add <4 x i64> %111, %96
  %116 = add i32 %91, 16
  %117 = add <4 x i32> %92, <i32 16, i32 16, i32 16, i32 16>
  %118 = icmp eq i32 %116, %89
  br i1 %118, label %119, label %90, !llvm.loop !25132

119:                                              ; preds = %90
  %120 = add <4 x i64> %113, %112
  %121 = add <4 x i64> %114, %120
  %122 = add <4 x i64> %115, %121
  %123 = shufflevector <4 x i64> %122, <4 x i64> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %124 = add <4 x i64> %122, %123
  %125 = shufflevector <4 x i64> %124, <4 x i64> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %126 = add <4 x i64> %124, %125
  %127 = extractelement <4 x i64> %126, i32 0
  br label %128

128:                                              ; preds = %119, %80
  %129 = phi i32 [ 0, %80 ], [ %89, %119 ]
  %130 = phi i64 [ 0, %80 ], [ %127, %119 ]
  %131 = sub i32 %78, %129
  %132 = xor i32 %129, -1
  %133 = add i32 %78, %132
  %134 = and i32 %131, 7
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %147, label %.preheader18

.preheader18:                                     ; preds = %.preheader18, %128
  %136 = phi i32 [ %143, %.preheader18 ], [ %129, %128 ]
  %137 = phi i64 [ %142, %.preheader18 ], [ %130, %128 ]
  %138 = phi i32 [ %144, %.preheader18 ], [ %134, %128 ]
  %139 = sext i32 %136 to i64
  %140 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, i64 %139, i32 0, i32 0
  %141 = load i64, i64* %140, align 8, !tbaa !25131
  %142 = add i64 %141, %137
  %143 = add nuw i32 %136, 1
  %144 = add nsw i32 %138, -1
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %.loopexit19, label %.preheader18, !llvm.loop !25133

.loopexit19:                                      ; preds = %.preheader18
  %146 = add i32 %129, %134
  br label %147

147:                                              ; preds = %.loopexit19, %128
  %148 = phi i64 [ undef, %128 ], [ %142, %.loopexit19 ]
  %149 = phi i32 [ %129, %128 ], [ %146, %.loopexit19 ]
  %150 = phi i64 [ %130, %128 ], [ %142, %.loopexit19 ]
  %151 = icmp ult i32 %133, 7
  br i1 %151, label %.loopexit17, label %.preheader16

.preheader16:                                     ; preds = %.preheader16, %147
  %152 = phi i32 [ %193, %.preheader16 ], [ %149, %147 ]
  %153 = phi i64 [ %192, %.preheader16 ], [ %150, %147 ]
  %154 = sext i32 %152 to i64
  %155 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, i64 %154, i32 0, i32 0
  %156 = load i64, i64* %155, align 8, !tbaa !25131
  %157 = add i64 %156, %153
  %158 = add nuw i32 %152, 1
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, i64 %159, i32 0, i32 0
  %161 = load i64, i64* %160, align 8, !tbaa !25131
  %162 = add i64 %161, %157
  %163 = add nuw i32 %152, 2
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, i64 %164, i32 0, i32 0
  %166 = load i64, i64* %165, align 8, !tbaa !25131
  %167 = add i64 %166, %162
  %168 = add nuw i32 %152, 3
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, i64 %169, i32 0, i32 0
  %171 = load i64, i64* %170, align 8, !tbaa !25131
  %172 = add i64 %171, %167
  %173 = add nuw i32 %152, 4
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, i64 %174, i32 0, i32 0
  %176 = load i64, i64* %175, align 8, !tbaa !25131
  %177 = add i64 %176, %172
  %178 = add nuw i32 %152, 5
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, i64 %179, i32 0, i32 0
  %181 = load i64, i64* %180, align 8, !tbaa !25131
  %182 = add i64 %181, %177
  %183 = add nuw i32 %152, 6
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, i64 %184, i32 0, i32 0
  %186 = load i64, i64* %185, align 8, !tbaa !25131
  %187 = add i64 %186, %182
  %188 = add nuw i32 %152, 7
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, i64 %189, i32 0, i32 0
  %191 = load i64, i64* %190, align 8, !tbaa !25131
  %192 = add i64 %191, %187
  %193 = add nuw i32 %152, 8
  %194 = icmp eq i32 %193, %78
  br i1 %194, label %.loopexit17, label %.preheader16, !llvm.loop !25134

.loopexit17:                                      ; preds = %.preheader16, %147
  %195 = phi i64 [ %148, %147 ], [ %192, %.preheader16 ]
  %196 = and i32 %78, 3
  %197 = icmp ult i32 %82, 3
  br i1 %197, label %238, label %198

198:                                              ; preds = %.loopexit17
  %199 = sub i32 %78, %196
  br label %200

200:                                              ; preds = %200, %198
  %201 = phi i32 [ 0, %198 ], [ %235, %200 ]
  %202 = phi i64 [ -1, %198 ], [ %234, %200 ]
  %203 = phi i32 [ %199, %198 ], [ %236, %200 ]
  %204 = sext i32 %201 to i64
  %205 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, i64 %204, i32 0, i32 2
  %206 = load i64, i64* %205, align 8, !tbaa !25124
  %207 = icmp ne i64 %206, 0
  %208 = icmp ult i64 %206, %202
  %209 = and i1 %207, %208
  %210 = select i1 %209, i64 %206, i64 %202
  %211 = or i32 %201, 1
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, i64 %212, i32 0, i32 2
  %214 = load i64, i64* %213, align 8, !tbaa !25124
  %215 = icmp ne i64 %214, 0
  %216 = icmp ult i64 %214, %210
  %217 = and i1 %215, %216
  %218 = select i1 %217, i64 %214, i64 %210
  %219 = or i32 %201, 2
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, i64 %220, i32 0, i32 2
  %222 = load i64, i64* %221, align 8, !tbaa !25124
  %223 = icmp ne i64 %222, 0
  %224 = icmp ult i64 %222, %218
  %225 = and i1 %223, %224
  %226 = select i1 %225, i64 %222, i64 %218
  %227 = or i32 %201, 3
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, i64 %228, i32 0, i32 2
  %230 = load i64, i64* %229, align 8, !tbaa !25124
  %231 = icmp ne i64 %230, 0
  %232 = icmp ult i64 %230, %226
  %233 = and i1 %231, %232
  %234 = select i1 %233, i64 %230, i64 %226
  %235 = add nuw i32 %201, 4
  %236 = add i32 %203, -4
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %.loopexit15, label %200

.loopexit15:                                      ; preds = %200
  %phitmp = sext i32 %235 to i64
  br label %238

238:                                              ; preds = %.loopexit15, %.loopexit17
  %239 = phi i64 [ undef, %.loopexit17 ], [ %234, %.loopexit15 ]
  %240 = phi i64 [ 0, %.loopexit17 ], [ %phitmp, %.loopexit15 ]
  %241 = phi i64 [ -1, %.loopexit17 ], [ %234, %.loopexit15 ]
  %242 = icmp eq i32 %196, 0
  br i1 %242, label %.loopexit14, label %.preheader13

.preheader13:                                     ; preds = %.preheader13, %238
  %indvars.iv43 = phi i64 [ %indvars.iv.next44, %.preheader13 ], [ %240, %238 ]
  %243 = phi i64 [ %250, %.preheader13 ], [ %241, %238 ]
  %244 = phi i32 [ %251, %.preheader13 ], [ %196, %238 ]
  %245 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, i64 %indvars.iv43, i32 0, i32 2
  %246 = load i64, i64* %245, align 8, !tbaa !25124
  %247 = icmp ne i64 %246, 0
  %248 = icmp ult i64 %246, %243
  %249 = and i1 %247, %248
  %250 = select i1 %249, i64 %246, i64 %243
  %251 = add nsw i32 %244, -1
  %252 = icmp eq i32 %251, 0
  %indvars.iv.next44 = add nsw i64 %indvars.iv43, 1
  br i1 %252, label %.loopexit14, label %.preheader13, !llvm.loop !25135

.loopexit14:                                      ; preds = %.preheader13, %238
  %253 = phi i64 [ %239, %238 ], [ %250, %.preheader13 ]
  %254 = mul i64 %195, 1000
  br label %255

255:                                              ; preds = %.loopexit14, %76
  %256 = phi i64 [ 0, %76 ], [ %254, %.loopexit14 ]
  %257 = phi i64 [ -1, %76 ], [ %253, %.loopexit14 ]
  %258 = sub i64 %15, %257
  %259 = udiv i64 %256, %258
  %260 = zext i32 %57 to i64
  %261 = icmp ugt i64 %259, %260
  br i1 %261, label %262, label %.loopexit

262:                                              ; preds = %255
  tail call void (i8*, ...) @click_chatter(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.15.6094, i64 0, i64 0), %class.AverageCounterBase.23* %0, i64 %259)
  store i32 0, i32* %56, align 8, !tbaa !25128
  %263 = load i32, i32* %77, align 8, !tbaa !25118
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %.loopexit, label %265

265:                                              ; preds = %262
  %266 = load %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"*, %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"** %16, align 8, !tbaa !25120
  %267 = add i32 %263, -1
  %268 = and i32 %263, 7
  %269 = icmp ult i32 %267, 7
  br i1 %269, label %312, label %270

270:                                              ; preds = %265
  %271 = sub i32 %263, %268
  br label %272

272:                                              ; preds = %272, %270
  %273 = phi i32 [ 0, %270 ], [ %305, %272 ]
  %274 = phi i32 [ %271, %270 ], [ %307, %272 ]
  %275 = sext i32 %273 to i64
  %276 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %266, i64 %275, i32 0, i32 0
  %277 = or i32 %273, 1
  %278 = bitcast i64* %276 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %278, i8 0, i64 32, i1 false)
  %279 = sext i32 %277 to i64
  %280 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %266, i64 %279, i32 0, i32 0
  %281 = or i32 %273, 2
  %282 = bitcast i64* %280 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %282, i8 0, i64 32, i1 false)
  %283 = sext i32 %281 to i64
  %284 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %266, i64 %283, i32 0, i32 0
  %285 = or i32 %273, 3
  %286 = bitcast i64* %284 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %286, i8 0, i64 32, i1 false)
  %287 = sext i32 %285 to i64
  %288 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %266, i64 %287, i32 0, i32 0
  %289 = or i32 %273, 4
  %290 = bitcast i64* %288 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %290, i8 0, i64 32, i1 false)
  %291 = sext i32 %289 to i64
  %292 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %266, i64 %291, i32 0, i32 0
  %293 = or i32 %273, 5
  %294 = bitcast i64* %292 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %294, i8 0, i64 32, i1 false)
  %295 = sext i32 %293 to i64
  %296 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %266, i64 %295, i32 0, i32 0
  %297 = or i32 %273, 6
  %298 = bitcast i64* %296 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %298, i8 0, i64 32, i1 false)
  %299 = sext i32 %297 to i64
  %300 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %266, i64 %299, i32 0, i32 0
  %301 = or i32 %273, 7
  %302 = bitcast i64* %300 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %302, i8 0, i64 32, i1 false)
  %303 = sext i32 %301 to i64
  %304 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %266, i64 %303, i32 0, i32 0
  %305 = add nuw i32 %273, 8
  %306 = bitcast i64* %304 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %306, i8 0, i64 32, i1 false)
  %307 = add i32 %274, -8
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %.loopexit12, label %272

309:                                              ; preds = %25
  br i1 %34, label %310, label %.loopexit

310:                                              ; preds = %309
  %311 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %17, i64 %20, i32 0, i32 3
  store i64 %15, i64* %311, align 8, !tbaa !25127
  br label %.loopexit

.loopexit12:                                      ; preds = %272
  %phitmp45 = sext i32 %305 to i64
  br label %312

312:                                              ; preds = %.loopexit12, %265
  %313 = phi i64 [ 0, %265 ], [ %phitmp45, %.loopexit12 ]
  %314 = icmp eq i32 %268, 0
  br i1 %314, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %.preheader, %312
  %indvars.iv = phi i64 [ %indvars.iv.next, %.preheader ], [ %313, %312 ]
  %315 = phi i32 [ %318, %.preheader ], [ %268, %312 ]
  %316 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %266, i64 %indvars.iv, i32 0, i32 0
  %317 = bitcast i64* %316 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %317, i8 0, i64 32, i1 false)
  %318 = add nsw i32 %315, -1
  %319 = icmp eq i32 %318, 0
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  br i1 %319, label %.loopexit, label %.preheader, !llvm.loop !25136

.loopexit:                                        ; preds = %.preheader, %312, %310, %309, %262, %255, %47
  ret %class.PacketBatch* %1
}

define weak_odr dso_local void @_ZN18AverageCounterBaseI22AverageCounterStatsIMPE32averagecounter_read_rate_handlerEP7ElementPv(%class.String* noalias sret %0, %class.Element* %1, i8* %2) #0 comdat align 2 {
  %4 = bitcast %class.Element* %1 to %class.AverageCounterBase.23*
  %5 = getelementptr inbounds %class.Element, %class.Element* %1, i64 1, i32 1
  %6 = load i32, i32* %5, align 8, !tbaa !25118
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %.loopexit, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.Element, %class.Element* %1, i64 1
  %10 = bitcast %class.Element* %9 to %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"**
  %11 = load %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"*, %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"** %10, align 8, !tbaa !25120
  %12 = icmp ult i32 %6, 17
  %13 = add i32 %6, -1
  %14 = icmp slt i32 %13, 0
  %15 = or i1 %12, %14
  br i1 %15, label %68, label %16

16:                                               ; preds = %8
  %17 = and i32 %6, 15
  %18 = icmp eq i32 %17, 0
  %19 = select i1 %18, i32 16, i32 %17
  %20 = sub i32 %6, %19
  br label %21

21:                                               ; preds = %21, %16
  %22 = phi i32 [ 0, %16 ], [ %51, %21 ]
  %23 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %16 ], [ %52, %21 ]
  %24 = phi <4 x i64> [ zeroinitializer, %16 ], [ %47, %21 ]
  %25 = phi <4 x i64> [ zeroinitializer, %16 ], [ %48, %21 ]
  %26 = phi <4 x i64> [ zeroinitializer, %16 ], [ %49, %21 ]
  %27 = phi <4 x i64> [ zeroinitializer, %16 ], [ %50, %21 ]
  %28 = add <4 x i32> %23, <i32 4, i32 4, i32 4, i32 4>
  %29 = add <4 x i32> %23, <i32 8, i32 8, i32 8, i32 8>
  %30 = add <4 x i32> %23, <i32 12, i32 12, i32 12, i32 12>
  %31 = sext <4 x i32> %23 to <4 x i64>
  %32 = sext <4 x i32> %28 to <4 x i64>
  %33 = sext <4 x i32> %29 to <4 x i64>
  %34 = sext <4 x i32> %30 to <4 x i64>
  %35 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %11, <4 x i64> %31, i32 0, i32 3
  %36 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %11, <4 x i64> %32, i32 0, i32 3
  %37 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %11, <4 x i64> %33, i32 0, i32 3
  %38 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %11, <4 x i64> %34, i32 0, i32 3
  %39 = tail call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %35, i32 8, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !25127
  %40 = tail call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %36, i32 8, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !25127
  %41 = tail call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %37, i32 8, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !25127
  %42 = tail call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %38, i32 8, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !25127
  %43 = icmp ugt <4 x i64> %39, %24
  %44 = icmp ugt <4 x i64> %40, %25
  %45 = icmp ugt <4 x i64> %41, %26
  %46 = icmp ugt <4 x i64> %42, %27
  %47 = select <4 x i1> %43, <4 x i64> %39, <4 x i64> %24
  %48 = select <4 x i1> %44, <4 x i64> %40, <4 x i64> %25
  %49 = select <4 x i1> %45, <4 x i64> %41, <4 x i64> %26
  %50 = select <4 x i1> %46, <4 x i64> %42, <4 x i64> %27
  %51 = add i32 %22, 16
  %52 = add <4 x i32> %23, <i32 16, i32 16, i32 16, i32 16>
  %53 = icmp eq i32 %51, %20
  br i1 %53, label %54, label %21, !llvm.loop !25137

54:                                               ; preds = %21
  %55 = icmp ugt <4 x i64> %47, %48
  %56 = select <4 x i1> %55, <4 x i64> %47, <4 x i64> %48
  %57 = icmp ugt <4 x i64> %56, %49
  %58 = select <4 x i1> %57, <4 x i64> %56, <4 x i64> %49
  %59 = icmp ugt <4 x i64> %58, %50
  %60 = select <4 x i1> %59, <4 x i64> %58, <4 x i64> %50
  %61 = shufflevector <4 x i64> %60, <4 x i64> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %62 = icmp ugt <4 x i64> %60, %61
  %63 = select <4 x i1> %62, <4 x i64> %60, <4 x i64> %61
  %64 = shufflevector <4 x i64> %63, <4 x i64> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %65 = icmp ugt <4 x i64> %63, %64
  %66 = select <4 x i1> %65, <4 x i64> %63, <4 x i64> %64
  %67 = extractelement <4 x i64> %66, i32 0
  br label %68

68:                                               ; preds = %54, %8
  %69 = phi i32 [ 0, %8 ], [ %20, %54 ]
  %70 = phi i64 [ 0, %8 ], [ %67, %54 ]
  %71 = sub i32 %6, %69
  %72 = xor i32 %69, -1
  %73 = add i32 %6, %72
  %74 = and i32 %71, 7
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %88, label %.preheader7

.preheader7:                                      ; preds = %.preheader7, %68
  %76 = phi i32 [ %84, %.preheader7 ], [ %69, %68 ]
  %77 = phi i64 [ %83, %.preheader7 ], [ %70, %68 ]
  %78 = phi i32 [ %85, %.preheader7 ], [ %74, %68 ]
  %79 = sext i32 %76 to i64
  %80 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %11, i64 %79, i32 0, i32 3
  %81 = load i64, i64* %80, align 8, !tbaa !25127
  %82 = icmp ugt i64 %81, %77
  %83 = select i1 %82, i64 %81, i64 %77
  %84 = add nuw i32 %76, 1
  %85 = add nsw i32 %78, -1
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %.loopexit8, label %.preheader7, !llvm.loop !25138

.loopexit8:                                       ; preds = %.preheader7
  %87 = add i32 %69, %74
  br label %88

88:                                               ; preds = %.loopexit8, %68
  %89 = phi i64 [ undef, %68 ], [ %83, %.loopexit8 ]
  %90 = phi i32 [ %69, %68 ], [ %87, %.loopexit8 ]
  %91 = phi i64 [ %70, %68 ], [ %83, %.loopexit8 ]
  %92 = icmp ult i32 %73, 7
  br i1 %92, label %.loopexit6, label %.preheader5

.preheader5:                                      ; preds = %.preheader5, %88
  %93 = phi i32 [ %142, %.preheader5 ], [ %90, %88 ]
  %94 = phi i64 [ %141, %.preheader5 ], [ %91, %88 ]
  %95 = sext i32 %93 to i64
  %96 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %11, i64 %95, i32 0, i32 3
  %97 = load i64, i64* %96, align 8, !tbaa !25127
  %98 = icmp ugt i64 %97, %94
  %99 = select i1 %98, i64 %97, i64 %94
  %100 = add nuw i32 %93, 1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %11, i64 %101, i32 0, i32 3
  %103 = load i64, i64* %102, align 8, !tbaa !25127
  %104 = icmp ugt i64 %103, %99
  %105 = select i1 %104, i64 %103, i64 %99
  %106 = add nuw i32 %93, 2
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %11, i64 %107, i32 0, i32 3
  %109 = load i64, i64* %108, align 8, !tbaa !25127
  %110 = icmp ugt i64 %109, %105
  %111 = select i1 %110, i64 %109, i64 %105
  %112 = add nuw i32 %93, 3
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %11, i64 %113, i32 0, i32 3
  %115 = load i64, i64* %114, align 8, !tbaa !25127
  %116 = icmp ugt i64 %115, %111
  %117 = select i1 %116, i64 %115, i64 %111
  %118 = add nuw i32 %93, 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %11, i64 %119, i32 0, i32 3
  %121 = load i64, i64* %120, align 8, !tbaa !25127
  %122 = icmp ugt i64 %121, %117
  %123 = select i1 %122, i64 %121, i64 %117
  %124 = add nuw i32 %93, 5
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %11, i64 %125, i32 0, i32 3
  %127 = load i64, i64* %126, align 8, !tbaa !25127
  %128 = icmp ugt i64 %127, %123
  %129 = select i1 %128, i64 %127, i64 %123
  %130 = add nuw i32 %93, 6
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %11, i64 %131, i32 0, i32 3
  %133 = load i64, i64* %132, align 8, !tbaa !25127
  %134 = icmp ugt i64 %133, %129
  %135 = select i1 %134, i64 %133, i64 %129
  %136 = add nuw i32 %93, 7
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %11, i64 %137, i32 0, i32 3
  %139 = load i64, i64* %138, align 8, !tbaa !25127
  %140 = icmp ugt i64 %139, %135
  %141 = select i1 %140, i64 %139, i64 %135
  %142 = add nuw i32 %93, 8
  %143 = icmp eq i32 %142, %6
  br i1 %143, label %.loopexit6, label %.preheader5, !llvm.loop !25139

.loopexit6:                                       ; preds = %.preheader5, %88
  %144 = phi i64 [ %89, %88 ], [ %141, %.preheader5 ]
  %145 = and i32 %6, 3
  %146 = icmp ult i32 %13, 3
  br i1 %146, label %187, label %147

147:                                              ; preds = %.loopexit6
  %148 = sub i32 %6, %145
  br label %149

149:                                              ; preds = %149, %147
  %150 = phi i32 [ 0, %147 ], [ %184, %149 ]
  %151 = phi i64 [ -1, %147 ], [ %183, %149 ]
  %152 = phi i32 [ %148, %147 ], [ %185, %149 ]
  %153 = sext i32 %150 to i64
  %154 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %11, i64 %153, i32 0, i32 2
  %155 = load i64, i64* %154, align 8, !tbaa !25124
  %156 = icmp ne i64 %155, 0
  %157 = icmp ult i64 %155, %151
  %158 = and i1 %156, %157
  %159 = select i1 %158, i64 %155, i64 %151
  %160 = or i32 %150, 1
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %11, i64 %161, i32 0, i32 2
  %163 = load i64, i64* %162, align 8, !tbaa !25124
  %164 = icmp ne i64 %163, 0
  %165 = icmp ult i64 %163, %159
  %166 = and i1 %164, %165
  %167 = select i1 %166, i64 %163, i64 %159
  %168 = or i32 %150, 2
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %11, i64 %169, i32 0, i32 2
  %171 = load i64, i64* %170, align 8, !tbaa !25124
  %172 = icmp ne i64 %171, 0
  %173 = icmp ult i64 %171, %167
  %174 = and i1 %172, %173
  %175 = select i1 %174, i64 %171, i64 %167
  %176 = or i32 %150, 3
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %11, i64 %177, i32 0, i32 2
  %179 = load i64, i64* %178, align 8, !tbaa !25124
  %180 = icmp ne i64 %179, 0
  %181 = icmp ult i64 %179, %175
  %182 = and i1 %180, %181
  %183 = select i1 %182, i64 %179, i64 %175
  %184 = add nuw i32 %150, 4
  %185 = add i32 %152, -4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %.loopexit4, label %149

.loopexit4:                                       ; preds = %149
  %phitmp = sext i32 %184 to i64
  br label %187

187:                                              ; preds = %.loopexit4, %.loopexit6
  %188 = phi i64 [ undef, %.loopexit6 ], [ %183, %.loopexit4 ]
  %189 = phi i64 [ 0, %.loopexit6 ], [ %phitmp, %.loopexit4 ]
  %190 = phi i64 [ -1, %.loopexit6 ], [ %183, %.loopexit4 ]
  %191 = icmp eq i32 %145, 0
  br i1 %191, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %.preheader, %187
  %indvars.iv = phi i64 [ %indvars.iv.next, %.preheader ], [ %189, %187 ]
  %192 = phi i64 [ %199, %.preheader ], [ %190, %187 ]
  %193 = phi i32 [ %200, %.preheader ], [ %145, %187 ]
  %194 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %11, i64 %indvars.iv, i32 0, i32 2
  %195 = load i64, i64* %194, align 8, !tbaa !25124
  %196 = icmp ne i64 %195, 0
  %197 = icmp ult i64 %195, %192
  %198 = and i1 %196, %197
  %199 = select i1 %198, i64 %195, i64 %192
  %200 = add nsw i32 %193, -1
  %201 = icmp eq i32 %200, 0
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  br i1 %201, label %.loopexit, label %.preheader, !llvm.loop !25140

.loopexit:                                        ; preds = %.preheader, %187, %3
  %202 = phi i64 [ 0, %3 ], [ %144, %187 ], [ %144, %.preheader ]
  %203 = phi i64 [ -1, %3 ], [ %188, %187 ], [ %199, %.preheader ]
  %204 = sub i64 %202, %203
  %205 = ptrtoint i8* %2 to i64
  %206 = trunc i64 %205 to i32
  %207 = getelementptr inbounds %class.Element, %class.Element* %1, i64 1, i32 4
  %208 = bitcast [2 x %"class.Element::Port"*]* %207 to i64*
  %209 = load i64, i64* %208, align 8, !tbaa !25126
  %210 = sub i64 %204, %209
  %211 = icmp eq i64 %210, 0
  %212 = select i1 %211, i64 1, i64 %210
  %213 = tail call fastcc i64 @_Z9get_countI22AverageCounterStatsIMPEmP18AverageCounterBaseIT_Ei(%class.AverageCounterBase.23* %4, i32 %206)
  %214 = icmp eq i32 %206, 4
  %215 = uitofp i64 %213 to double
  %216 = fmul double %215, 1.000000e+03
  %217 = uitofp i64 %212 to double
  %218 = select i1 %214, double 1.000000e+03, double %217
  %219 = select i1 %214, double %217, double %216
  %220 = fdiv double %219, %218
  tail call void @_ZN6StringC2Ed(%class.String* %0, double %220)
  ret void
}

define internal void @_ZN18AverageCounterBaseI22AverageCounterStatsIMPED0Ev(%class.AverageCounterBase.23* nocapture readnone %0) unnamed_addr #24 comdat align 2 {
  tail call void @llvm.trap() #57
  unreachable
}

define weak_odr dso_local void @_ZN18AverageCounterBaseI22AverageCounterStatsIMPEC2Ev(%class.AverageCounterBase.23* %0) unnamed_addr #0 comdat($_ZN18AverageCounterBaseI22AverageCounterStatsIMPEC5Ev) align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 2
  store i8 0, i8* %4, align 4, !tbaa !20277
  %5 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 5, i64 0
  %6 = getelementptr inbounds %"class.Element::Port", %"class.Element::Port"* %5, i64 0, i32 0
  store %class.Element* null, %class.Element** %6, align 8, !tbaa !20278
  %7 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 5, i64 0, i32 1
  store i32 -2, i32* %7, align 8, !tbaa !20280
  %8 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 5, i64 1, i32 0
  store %class.Element* null, %class.Element** %8, align 8, !tbaa !20278
  %9 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 5, i64 1, i32 1
  store i32 -2, i32* %9, align 8, !tbaa !20280
  %10 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 5, i64 2, i32 0
  store %class.Element* null, %class.Element** %10, align 8, !tbaa !20278
  %11 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 5, i64 2, i32 1
  store i32 -2, i32* %11, align 8, !tbaa !20280
  %12 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 5, i64 3, i32 0
  store %class.Element* null, %class.Element** %12, align 8, !tbaa !20278
  %13 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 5, i64 3, i32 1
  store i32 -2, i32* %13, align 8, !tbaa !20280
  %14 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 7
  store %class.Router* null, %class.Router** %14, align 8, !tbaa !20281
  %15 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 8
  store i32 -1, i32* %15, align 8, !tbaa !20282
  %16 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 10
  %17 = bitcast %class.Vector* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(17) %17, i8 0, i64 17, i1 false) #34
  %18 = load i32, i32* @_ZN7Element19nelements_allocatedE, align 4, !tbaa !20283
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* @_ZN7Element19nelements_allocatedE, align 4, !tbaa !20283
  %20 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 4, i64 1
  store %"class.Element::Port"* %5, %"class.Element::Port"** %20, align 8, !tbaa !20284
  %21 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 4, i64 0
  store %"class.Element::Port"* %5, %"class.Element::Port"** %21, align 8, !tbaa !20284
  %22 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 6, i64 1
  store i32 0, i32* %22, align 4, !tbaa !20283
  %23 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 0, i32 0, i32 6, i64 0
  store i32 0, i32* %23, align 8, !tbaa !20283
  store i32 1, i32* %3, align 8, !tbaa !20267
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*] }, { [39 x i8*] }* @_ZTV18AverageCounterBaseI22AverageCounterStatsIMPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !20285
  %24 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 3
  %25 = load i32, i32* @click_nthreads, align 4, !tbaa !20283
  %26 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 3, i32 0, i32 1
  store i32 %25, i32* %26, align 8, !tbaa !25118
  %27 = zext i32 %25 to i64
  %28 = shl nuw nsw i64 %27, 6
  %29 = tail call noalias i8* @aligned_alloc(i64 64, i64 %28) #34
  %30 = load i32, i32* %26, align 8, !tbaa !25118
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %1
  %33 = zext i32 %30 to i64
  %34 = shl nuw nsw i64 %33, 6
  tail call void @llvm.memset.p0i8.i64(i8* align 64 %29, i8 0, i64 %34, i1 false)
  br label %35

35:                                               ; preds = %32, %1
  %36 = bitcast %struct.AverageCounterStatsIMP* %24 to i8**
  store i8* %29, i8** %36, align 8, !tbaa !25120
  %37 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 1
  store i8 1, i8* %37, align 1, !tbaa !25121
  ret void
}

define weak_odr dso_local void @_ZN18AverageCounterBaseI19AverageCounterStatsImEE5resetEb(%class.AverageCounterBase* %0, i1 zeroext %1) local_unnamed_addr #10 comdat align 2 {
  %3 = alloca %struct.timespec, align 8
  %4 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 2
  %5 = bitcast %"struct.TimestampAccumBase<per_thread>::State"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %5, i8 0, i64 32, i1 false) #34
  br i1 %1, label %6, label %23

6:                                                ; preds = %2
  %7 = bitcast %struct.timespec* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #34
  %8 = call i32 @clock_gettime(i32 1, %struct.timespec* nonnull %3) #34
  %9 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i64 0, i32 0
  %10 = load i64, i64* %9, align 8, !tbaa !20557
  %11 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i64 0, i32 1
  %12 = load i64, i64* %11, align 8, !tbaa !20559
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #34
  %13 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 2, i32 2
  %14 = load i64, i64* %13, align 8, !tbaa !25102
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %6
  %17 = shl i64 %10, 32
  %18 = ashr exact i64 %17, 32
  %19 = mul nsw i64 %18, 1000000000
  %20 = and i64 %12, 4294967295
  %21 = add nsw i64 %19, %20
  %22 = sdiv i64 %21, 1000000
  store i64 %22, i64* %13, align 8, !tbaa !25102
  br label %23

23:                                               ; preds = %16, %6, %2
  ret void
}

define weak_odr dso_local i64 @_ZNK18AverageCounterBaseI19AverageCounterStatsImEE5countEv(%class.AverageCounterBase* %0) local_unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 2, i32 0
  %3 = load i64, i64* %2, align 8, !tbaa !25107
  ret i64 %3
}

define weak_odr dso_local i64 @_ZNK18AverageCounterBaseI19AverageCounterStatsImEE10byte_countEv(%class.AverageCounterBase* %0) local_unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 2, i32 1
  %3 = load i64, i64* %2, align 8, !tbaa !25108
  ret i64 %3
}

define weak_odr dso_local i64 @_ZNK18AverageCounterBaseI19AverageCounterStatsImEE5firstEv(%class.AverageCounterBase* %0) local_unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 2, i32 2
  %3 = load i64, i64* %2, align 8, !tbaa !25102
  ret i64 %3
}

define weak_odr dso_local i64 @_ZNK18AverageCounterBaseI19AverageCounterStatsImEE4lastEv(%class.AverageCounterBase* %0) local_unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 2, i32 3
  %3 = load i64, i64* %2, align 8, !tbaa !25104
  ret i64 %3
}

define weak_odr dso_local i64 @_ZNK18AverageCounterBaseI19AverageCounterStatsImEE6ignoreEv(%class.AverageCounterBase* %0) local_unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %class.AverageCounterBase, %class.AverageCounterBase* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8, !tbaa !25103
  ret i64 %3
}

define weak_odr dso_local void @_ZN18AverageCounterBaseI19AverageCounterStatsI15atomic_uint64_tEE5resetEb(%class.AverageCounterBase.21* %0, i1 zeroext %1) local_unnamed_addr #10 comdat align 2 {
  %3 = alloca %struct.timespec, align 8
  %4 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 0, i32 0
  store volatile i64 0, i64* %4, align 16, !tbaa !20964
  %5 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 1, i32 0
  store volatile i64 0, i64* %5, align 16, !tbaa !20964
  %6 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 2, i32 0
  store volatile i64 0, i64* %6, align 16, !tbaa !20964
  %7 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 3, i32 0
  store volatile i64 0, i64* %7, align 16, !tbaa !20964
  br i1 %1, label %8, label %24

8:                                                ; preds = %2
  %9 = bitcast %struct.timespec* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #34
  %10 = call i32 @clock_gettime(i32 1, %struct.timespec* nonnull %3) #34
  %11 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i64 0, i32 0
  %12 = load i64, i64* %11, align 8, !tbaa !20557
  %13 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i64 0, i32 1
  %14 = load i64, i64* %13, align 8, !tbaa !20559
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #34
  %15 = load volatile i64, i64* %6, align 16, !tbaa !20964
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %24

17:                                               ; preds = %8
  %18 = shl i64 %12, 32
  %19 = ashr exact i64 %18, 32
  %20 = mul nsw i64 %19, 1000000000
  %21 = and i64 %14, 4294967295
  %22 = add nsw i64 %20, %21
  %23 = sdiv i64 %22, 1000000
  store volatile i64 %23, i64* %6, align 16, !tbaa !20964
  br label %24

24:                                               ; preds = %17, %8, %2
  ret void
}

define weak_odr dso_local i64 @_ZNK18AverageCounterBaseI19AverageCounterStatsI15atomic_uint64_tEE5countEv(%class.AverageCounterBase.21* %0) local_unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load volatile i64, i64* %2, align 16, !tbaa !20964
  ret i64 %3
}

define weak_odr dso_local i64 @_ZNK18AverageCounterBaseI19AverageCounterStatsI15atomic_uint64_tEE10byte_countEv(%class.AverageCounterBase.21* %0) local_unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 1, i32 0
  %3 = load volatile i64, i64* %2, align 16, !tbaa !20964
  ret i64 %3
}

define weak_odr dso_local i64 @_ZNK18AverageCounterBaseI19AverageCounterStatsI15atomic_uint64_tEE5firstEv(%class.AverageCounterBase.21* %0) local_unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 2, i32 0
  %3 = load volatile i64, i64* %2, align 16, !tbaa !20964
  ret i64 %3
}

define weak_odr dso_local i64 @_ZNK18AverageCounterBaseI19AverageCounterStatsI15atomic_uint64_tEE4lastEv(%class.AverageCounterBase.21* %0) local_unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 2, i32 3, i32 0
  %3 = load volatile i64, i64* %2, align 16, !tbaa !20964
  ret i64 %3
}

define weak_odr dso_local i64 @_ZNK18AverageCounterBaseI19AverageCounterStatsI15atomic_uint64_tEE6ignoreEv(%class.AverageCounterBase.21* %0) local_unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %class.AverageCounterBase.21, %class.AverageCounterBase.21* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 16, !tbaa !25114
  ret i64 %3
}

define weak_odr dso_local void @_ZN18AverageCounterBaseI22AverageCounterStatsIMPE5resetEb(%class.AverageCounterBase.23* %0, i1 zeroext %1) local_unnamed_addr #10 comdat align 2 {
  %3 = alloca %struct.timespec, align 8
  %4 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 3
  %5 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 3, i32 0, i32 1
  %6 = load i32, i32* %5, align 8, !tbaa !25118
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %.loopexit, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.AverageCounterStatsIMP, %struct.AverageCounterStatsIMP* %4, i64 0, i32 0, i32 0
  %10 = load %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"*, %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"** %9, align 8, !tbaa !25120
  %11 = add i32 %6, -1
  %12 = and i32 %6, 7
  %13 = icmp ult i32 %11, 7
  br i1 %13, label %53, label %14

14:                                               ; preds = %8
  %15 = sub i32 %6, %12
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i32 [ 0, %14 ], [ %49, %16 ]
  %18 = phi i32 [ %15, %14 ], [ %51, %16 ]
  %19 = sext i32 %17 to i64
  %20 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %10, i64 %19, i32 0, i32 0
  %21 = or i32 %17, 1
  %22 = bitcast i64* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %22, i8 0, i64 32, i1 false)
  %23 = sext i32 %21 to i64
  %24 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %10, i64 %23, i32 0, i32 0
  %25 = or i32 %17, 2
  %26 = bitcast i64* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %26, i8 0, i64 32, i1 false)
  %27 = sext i32 %25 to i64
  %28 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %10, i64 %27, i32 0, i32 0
  %29 = or i32 %17, 3
  %30 = bitcast i64* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %30, i8 0, i64 32, i1 false)
  %31 = sext i32 %29 to i64
  %32 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %10, i64 %31, i32 0, i32 0
  %33 = or i32 %17, 4
  %34 = bitcast i64* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %34, i8 0, i64 32, i1 false)
  %35 = sext i32 %33 to i64
  %36 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %10, i64 %35, i32 0, i32 0
  %37 = or i32 %17, 5
  %38 = bitcast i64* %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %38, i8 0, i64 32, i1 false)
  %39 = sext i32 %37 to i64
  %40 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %10, i64 %39, i32 0, i32 0
  %41 = or i32 %17, 6
  %42 = bitcast i64* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %42, i8 0, i64 32, i1 false)
  %43 = sext i32 %41 to i64
  %44 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %10, i64 %43, i32 0, i32 0
  %45 = or i32 %17, 7
  %46 = bitcast i64* %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %46, i8 0, i64 32, i1 false)
  %47 = sext i32 %45 to i64
  %48 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %10, i64 %47, i32 0, i32 0
  %49 = add nuw i32 %17, 8
  %50 = bitcast i64* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %50, i8 0, i64 32, i1 false)
  %51 = add i32 %18, -8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %.loopexit2, label %16

.loopexit2:                                       ; preds = %16
  %phitmp = sext i32 %49 to i64
  br label %53

53:                                               ; preds = %.loopexit2, %8
  %54 = phi i64 [ 0, %8 ], [ %phitmp, %.loopexit2 ]
  %55 = icmp eq i32 %12, 0
  br i1 %55, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %.preheader, %53
  %indvars.iv = phi i64 [ %indvars.iv.next, %.preheader ], [ %54, %53 ]
  %56 = phi i32 [ %59, %.preheader ], [ %12, %53 ]
  %57 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %10, i64 %indvars.iv, i32 0, i32 0
  %58 = bitcast i64* %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %58, i8 0, i64 32, i1 false)
  %59 = add nsw i32 %56, -1
  %60 = icmp eq i32 %59, 0
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  br i1 %60, label %.loopexit, label %.preheader, !llvm.loop !25158

.loopexit:                                        ; preds = %.preheader, %53, %2
  br i1 %1, label %61, label %83

61:                                               ; preds = %.loopexit
  %62 = bitcast %struct.timespec* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #34
  %63 = call i32 @clock_gettime(i32 1, %struct.timespec* nonnull %3) #34
  %64 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i64 0, i32 0
  %65 = load i64, i64* %64, align 8, !tbaa !20557
  %66 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i64 0, i32 1
  %67 = load i64, i64* %66, align 8, !tbaa !20559
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #34
  %68 = getelementptr inbounds %struct.AverageCounterStatsIMP, %struct.AverageCounterStatsIMP* %4, i64 0, i32 0, i32 0
  %69 = load %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"*, %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"** %68, align 8, !tbaa !25120
  %70 = load i32, i32* @click_current_thread_id, align 4, !tbaa !20283
  %71 = and i32 %70, 65535
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %69, i64 %72, i32 0, i32 2
  %74 = load i64, i64* %73, align 8, !tbaa !25124
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %83

76:                                               ; preds = %61
  %77 = shl i64 %65, 32
  %78 = ashr exact i64 %77, 32
  %79 = mul nsw i64 %78, 1000000000
  %80 = and i64 %67, 4294967295
  %81 = add nsw i64 %79, %80
  %82 = sdiv i64 %81, 1000000
  store i64 %82, i64* %73, align 8, !tbaa !25124
  br label %83

83:                                               ; preds = %76, %61, %.loopexit
  ret void
}

define weak_odr dso_local i64 @_ZNK18AverageCounterBaseI22AverageCounterStatsIMPE5countEv(%class.AverageCounterBase.23* %0) local_unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 3, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !tbaa !25118
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %.loopexit, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"*, %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"** %6, align 8, !tbaa !25120
  %8 = icmp ult i32 %3, 17
  %9 = add i32 %3, -1
  %10 = icmp slt i32 %9, 0
  %11 = or i1 %8, %10
  br i1 %11, label %55, label %12

12:                                               ; preds = %5
  %13 = and i32 %3, 15
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %14, i32 16, i32 %13
  %16 = sub i32 %3, %15
  br label %17

17:                                               ; preds = %17, %12
  %18 = phi i32 [ 0, %12 ], [ %43, %17 ]
  %19 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %12 ], [ %44, %17 ]
  %20 = phi <4 x i64> [ zeroinitializer, %12 ], [ %39, %17 ]
  %21 = phi <4 x i64> [ zeroinitializer, %12 ], [ %40, %17 ]
  %22 = phi <4 x i64> [ zeroinitializer, %12 ], [ %41, %17 ]
  %23 = phi <4 x i64> [ zeroinitializer, %12 ], [ %42, %17 ]
  %24 = add <4 x i32> %19, <i32 4, i32 4, i32 4, i32 4>
  %25 = add <4 x i32> %19, <i32 8, i32 8, i32 8, i32 8>
  %26 = add <4 x i32> %19, <i32 12, i32 12, i32 12, i32 12>
  %27 = sext <4 x i32> %19 to <4 x i64>
  %28 = sext <4 x i32> %24 to <4 x i64>
  %29 = sext <4 x i32> %25 to <4 x i64>
  %30 = sext <4 x i32> %26 to <4 x i64>
  %31 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, <4 x i64> %27, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, <4 x i64> %28, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, <4 x i64> %29, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, <4 x i64> %30, i32 0, i32 0
  %35 = tail call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %31, i32 8, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !25131
  %36 = tail call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %32, i32 8, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !25131
  %37 = tail call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %33, i32 8, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !25131
  %38 = tail call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %34, i32 8, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !25131
  %39 = add <4 x i64> %35, %20
  %40 = add <4 x i64> %36, %21
  %41 = add <4 x i64> %37, %22
  %42 = add <4 x i64> %38, %23
  %43 = add i32 %18, 16
  %44 = add <4 x i32> %19, <i32 16, i32 16, i32 16, i32 16>
  %45 = icmp eq i32 %43, %16
  br i1 %45, label %46, label %17, !llvm.loop !25159

46:                                               ; preds = %17
  %47 = add <4 x i64> %40, %39
  %48 = add <4 x i64> %41, %47
  %49 = add <4 x i64> %42, %48
  %50 = shufflevector <4 x i64> %49, <4 x i64> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %51 = add <4 x i64> %49, %50
  %52 = shufflevector <4 x i64> %51, <4 x i64> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %53 = add <4 x i64> %51, %52
  %54 = extractelement <4 x i64> %53, i32 0
  br label %55

55:                                               ; preds = %46, %5
  %56 = phi i32 [ 0, %5 ], [ %16, %46 ]
  %57 = phi i64 [ 0, %5 ], [ %54, %46 ]
  %58 = sub i32 %3, %56
  %59 = xor i32 %56, -1
  %60 = add i32 %3, %59
  %61 = and i32 %58, 7
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %74, label %.preheader3

.preheader3:                                      ; preds = %.preheader3, %55
  %63 = phi i32 [ %70, %.preheader3 ], [ %56, %55 ]
  %64 = phi i64 [ %69, %.preheader3 ], [ %57, %55 ]
  %65 = phi i32 [ %71, %.preheader3 ], [ %61, %55 ]
  %66 = sext i32 %63 to i64
  %67 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %66, i32 0, i32 0
  %68 = load i64, i64* %67, align 8, !tbaa !25131
  %69 = add i64 %68, %64
  %70 = add nuw i32 %63, 1
  %71 = add nsw i32 %65, -1
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %.loopexit4, label %.preheader3, !llvm.loop !25160

.loopexit4:                                       ; preds = %.preheader3
  %73 = add i32 %56, %61
  br label %74

74:                                               ; preds = %.loopexit4, %55
  %75 = phi i64 [ undef, %55 ], [ %69, %.loopexit4 ]
  %76 = phi i32 [ %56, %55 ], [ %73, %.loopexit4 ]
  %77 = phi i64 [ %57, %55 ], [ %69, %.loopexit4 ]
  %78 = icmp ult i32 %60, 7
  br i1 %78, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %.preheader, %74
  %79 = phi i32 [ %120, %.preheader ], [ %76, %74 ]
  %80 = phi i64 [ %119, %.preheader ], [ %77, %74 ]
  %81 = sext i32 %79 to i64
  %82 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %81, i32 0, i32 0
  %83 = load i64, i64* %82, align 8, !tbaa !25131
  %84 = add i64 %83, %80
  %85 = add nuw i32 %79, 1
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %86, i32 0, i32 0
  %88 = load i64, i64* %87, align 8, !tbaa !25131
  %89 = add i64 %88, %84
  %90 = add nuw i32 %79, 2
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %91, i32 0, i32 0
  %93 = load i64, i64* %92, align 8, !tbaa !25131
  %94 = add i64 %93, %89
  %95 = add nuw i32 %79, 3
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %96, i32 0, i32 0
  %98 = load i64, i64* %97, align 8, !tbaa !25131
  %99 = add i64 %98, %94
  %100 = add nuw i32 %79, 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %101, i32 0, i32 0
  %103 = load i64, i64* %102, align 8, !tbaa !25131
  %104 = add i64 %103, %99
  %105 = add nuw i32 %79, 5
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %106, i32 0, i32 0
  %108 = load i64, i64* %107, align 8, !tbaa !25131
  %109 = add i64 %108, %104
  %110 = add nuw i32 %79, 6
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %111, i32 0, i32 0
  %113 = load i64, i64* %112, align 8, !tbaa !25131
  %114 = add i64 %113, %109
  %115 = add nuw i32 %79, 7
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %116, i32 0, i32 0
  %118 = load i64, i64* %117, align 8, !tbaa !25131
  %119 = add i64 %118, %114
  %120 = add nuw i32 %79, 8
  %121 = icmp eq i32 %120, %3
  br i1 %121, label %.loopexit, label %.preheader, !llvm.loop !25161

.loopexit:                                        ; preds = %.preheader, %74, %1
  %122 = phi i64 [ 0, %1 ], [ %75, %74 ], [ %119, %.preheader ]
  ret i64 %122
}

define weak_odr dso_local i64 @_ZNK18AverageCounterBaseI22AverageCounterStatsIMPE10byte_countEv(%class.AverageCounterBase.23* %0) local_unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 3, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !tbaa !25118
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %.loopexit, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"*, %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"** %6, align 8, !tbaa !25120
  %8 = icmp ult i32 %3, 17
  %9 = add i32 %3, -1
  %10 = icmp slt i32 %9, 0
  %11 = or i1 %8, %10
  br i1 %11, label %55, label %12

12:                                               ; preds = %5
  %13 = and i32 %3, 15
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %14, i32 16, i32 %13
  %16 = sub i32 %3, %15
  br label %17

17:                                               ; preds = %17, %12
  %18 = phi i32 [ 0, %12 ], [ %43, %17 ]
  %19 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %12 ], [ %44, %17 ]
  %20 = phi <4 x i64> [ zeroinitializer, %12 ], [ %39, %17 ]
  %21 = phi <4 x i64> [ zeroinitializer, %12 ], [ %40, %17 ]
  %22 = phi <4 x i64> [ zeroinitializer, %12 ], [ %41, %17 ]
  %23 = phi <4 x i64> [ zeroinitializer, %12 ], [ %42, %17 ]
  %24 = add <4 x i32> %19, <i32 4, i32 4, i32 4, i32 4>
  %25 = add <4 x i32> %19, <i32 8, i32 8, i32 8, i32 8>
  %26 = add <4 x i32> %19, <i32 12, i32 12, i32 12, i32 12>
  %27 = sext <4 x i32> %19 to <4 x i64>
  %28 = sext <4 x i32> %24 to <4 x i64>
  %29 = sext <4 x i32> %25 to <4 x i64>
  %30 = sext <4 x i32> %26 to <4 x i64>
  %31 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, <4 x i64> %27, i32 0, i32 1
  %32 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, <4 x i64> %28, i32 0, i32 1
  %33 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, <4 x i64> %29, i32 0, i32 1
  %34 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, <4 x i64> %30, i32 0, i32 1
  %35 = tail call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %31, i32 8, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !25142
  %36 = tail call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %32, i32 8, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !25142
  %37 = tail call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %33, i32 8, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !25142
  %38 = tail call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %34, i32 8, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !25142
  %39 = add <4 x i64> %35, %20
  %40 = add <4 x i64> %36, %21
  %41 = add <4 x i64> %37, %22
  %42 = add <4 x i64> %38, %23
  %43 = add i32 %18, 16
  %44 = add <4 x i32> %19, <i32 16, i32 16, i32 16, i32 16>
  %45 = icmp eq i32 %43, %16
  br i1 %45, label %46, label %17, !llvm.loop !25162

46:                                               ; preds = %17
  %47 = add <4 x i64> %40, %39
  %48 = add <4 x i64> %41, %47
  %49 = add <4 x i64> %42, %48
  %50 = shufflevector <4 x i64> %49, <4 x i64> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %51 = add <4 x i64> %49, %50
  %52 = shufflevector <4 x i64> %51, <4 x i64> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %53 = add <4 x i64> %51, %52
  %54 = extractelement <4 x i64> %53, i32 0
  br label %55

55:                                               ; preds = %46, %5
  %56 = phi i32 [ 0, %5 ], [ %16, %46 ]
  %57 = phi i64 [ 0, %5 ], [ %54, %46 ]
  %58 = sub i32 %3, %56
  %59 = xor i32 %56, -1
  %60 = add i32 %3, %59
  %61 = and i32 %58, 7
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %74, label %.preheader3

.preheader3:                                      ; preds = %.preheader3, %55
  %63 = phi i32 [ %70, %.preheader3 ], [ %56, %55 ]
  %64 = phi i64 [ %69, %.preheader3 ], [ %57, %55 ]
  %65 = phi i32 [ %71, %.preheader3 ], [ %61, %55 ]
  %66 = sext i32 %63 to i64
  %67 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %66, i32 0, i32 1
  %68 = load i64, i64* %67, align 8, !tbaa !25142
  %69 = add i64 %68, %64
  %70 = add nuw i32 %63, 1
  %71 = add nsw i32 %65, -1
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %.loopexit4, label %.preheader3, !llvm.loop !25163

.loopexit4:                                       ; preds = %.preheader3
  %73 = add i32 %56, %61
  br label %74

74:                                               ; preds = %.loopexit4, %55
  %75 = phi i64 [ undef, %55 ], [ %69, %.loopexit4 ]
  %76 = phi i32 [ %56, %55 ], [ %73, %.loopexit4 ]
  %77 = phi i64 [ %57, %55 ], [ %69, %.loopexit4 ]
  %78 = icmp ult i32 %60, 7
  br i1 %78, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %.preheader, %74
  %79 = phi i32 [ %120, %.preheader ], [ %76, %74 ]
  %80 = phi i64 [ %119, %.preheader ], [ %77, %74 ]
  %81 = sext i32 %79 to i64
  %82 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %81, i32 0, i32 1
  %83 = load i64, i64* %82, align 8, !tbaa !25142
  %84 = add i64 %83, %80
  %85 = add nuw i32 %79, 1
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %86, i32 0, i32 1
  %88 = load i64, i64* %87, align 8, !tbaa !25142
  %89 = add i64 %88, %84
  %90 = add nuw i32 %79, 2
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %91, i32 0, i32 1
  %93 = load i64, i64* %92, align 8, !tbaa !25142
  %94 = add i64 %93, %89
  %95 = add nuw i32 %79, 3
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %96, i32 0, i32 1
  %98 = load i64, i64* %97, align 8, !tbaa !25142
  %99 = add i64 %98, %94
  %100 = add nuw i32 %79, 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %101, i32 0, i32 1
  %103 = load i64, i64* %102, align 8, !tbaa !25142
  %104 = add i64 %103, %99
  %105 = add nuw i32 %79, 5
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %106, i32 0, i32 1
  %108 = load i64, i64* %107, align 8, !tbaa !25142
  %109 = add i64 %108, %104
  %110 = add nuw i32 %79, 6
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %111, i32 0, i32 1
  %113 = load i64, i64* %112, align 8, !tbaa !25142
  %114 = add i64 %113, %109
  %115 = add nuw i32 %79, 7
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %116, i32 0, i32 1
  %118 = load i64, i64* %117, align 8, !tbaa !25142
  %119 = add i64 %118, %114
  %120 = add nuw i32 %79, 8
  %121 = icmp eq i32 %120, %3
  br i1 %121, label %.loopexit, label %.preheader, !llvm.loop !25164

.loopexit:                                        ; preds = %.preheader, %74, %1
  %122 = phi i64 [ 0, %1 ], [ %75, %74 ], [ %119, %.preheader ]
  ret i64 %122
}

define weak_odr dso_local i64 @_ZNK18AverageCounterBaseI22AverageCounterStatsIMPE5firstEv(%class.AverageCounterBase.23* %0) local_unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 3, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !tbaa !25118
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %.loopexit, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"*, %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"** %6, align 8, !tbaa !25120
  %8 = add i32 %3, -1
  %9 = and i32 %3, 3
  %10 = icmp ult i32 %8, 3
  br i1 %10, label %51, label %11

11:                                               ; preds = %5
  %12 = sub i32 %3, %9
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi i32 [ 0, %11 ], [ %48, %13 ]
  %15 = phi i64 [ -1, %11 ], [ %47, %13 ]
  %16 = phi i32 [ %12, %11 ], [ %49, %13 ]
  %17 = sext i32 %14 to i64
  %18 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %17, i32 0, i32 2
  %19 = load i64, i64* %18, align 8, !tbaa !25124
  %20 = icmp ne i64 %19, 0
  %21 = icmp ult i64 %19, %15
  %22 = and i1 %20, %21
  %23 = select i1 %22, i64 %19, i64 %15
  %24 = or i32 %14, 1
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %25, i32 0, i32 2
  %27 = load i64, i64* %26, align 8, !tbaa !25124
  %28 = icmp ne i64 %27, 0
  %29 = icmp ult i64 %27, %23
  %30 = and i1 %28, %29
  %31 = select i1 %30, i64 %27, i64 %23
  %32 = or i32 %14, 2
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %33, i32 0, i32 2
  %35 = load i64, i64* %34, align 8, !tbaa !25124
  %36 = icmp ne i64 %35, 0
  %37 = icmp ult i64 %35, %31
  %38 = and i1 %36, %37
  %39 = select i1 %38, i64 %35, i64 %31
  %40 = or i32 %14, 3
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %41, i32 0, i32 2
  %43 = load i64, i64* %42, align 8, !tbaa !25124
  %44 = icmp ne i64 %43, 0
  %45 = icmp ult i64 %43, %39
  %46 = and i1 %44, %45
  %47 = select i1 %46, i64 %43, i64 %39
  %48 = add nuw i32 %14, 4
  %49 = add i32 %16, -4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %.loopexit2, label %13

.loopexit2:                                       ; preds = %13
  %phitmp = sext i32 %48 to i64
  br label %51

51:                                               ; preds = %.loopexit2, %5
  %52 = phi i64 [ undef, %5 ], [ %47, %.loopexit2 ]
  %53 = phi i64 [ 0, %5 ], [ %phitmp, %.loopexit2 ]
  %54 = phi i64 [ -1, %5 ], [ %47, %.loopexit2 ]
  %55 = icmp eq i32 %9, 0
  br i1 %55, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %.preheader, %51
  %indvars.iv = phi i64 [ %indvars.iv.next, %.preheader ], [ %53, %51 ]
  %56 = phi i64 [ %63, %.preheader ], [ %54, %51 ]
  %57 = phi i32 [ %64, %.preheader ], [ %9, %51 ]
  %58 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %indvars.iv, i32 0, i32 2
  %59 = load i64, i64* %58, align 8, !tbaa !25124
  %60 = icmp ne i64 %59, 0
  %61 = icmp ult i64 %59, %56
  %62 = and i1 %60, %61
  %63 = select i1 %62, i64 %59, i64 %56
  %64 = add nsw i32 %57, -1
  %65 = icmp eq i32 %64, 0
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  br i1 %65, label %.loopexit, label %.preheader, !llvm.loop !25165

.loopexit:                                        ; preds = %.preheader, %51, %1
  %66 = phi i64 [ -1, %1 ], [ %52, %51 ], [ %63, %.preheader ]
  ret i64 %66
}

define weak_odr dso_local i64 @_ZNK18AverageCounterBaseI22AverageCounterStatsIMPE4lastEv(%class.AverageCounterBase.23* %0) local_unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 3, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !tbaa !25118
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %.loopexit, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"*, %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"** %6, align 8, !tbaa !25120
  %8 = icmp ult i32 %3, 17
  %9 = add i32 %3, -1
  %10 = icmp slt i32 %9, 0
  %11 = or i1 %8, %10
  br i1 %11, label %64, label %12

12:                                               ; preds = %5
  %13 = and i32 %3, 15
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %14, i32 16, i32 %13
  %16 = sub i32 %3, %15
  br label %17

17:                                               ; preds = %17, %12
  %18 = phi i32 [ 0, %12 ], [ %47, %17 ]
  %19 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %12 ], [ %48, %17 ]
  %20 = phi <4 x i64> [ zeroinitializer, %12 ], [ %43, %17 ]
  %21 = phi <4 x i64> [ zeroinitializer, %12 ], [ %44, %17 ]
  %22 = phi <4 x i64> [ zeroinitializer, %12 ], [ %45, %17 ]
  %23 = phi <4 x i64> [ zeroinitializer, %12 ], [ %46, %17 ]
  %24 = add <4 x i32> %19, <i32 4, i32 4, i32 4, i32 4>
  %25 = add <4 x i32> %19, <i32 8, i32 8, i32 8, i32 8>
  %26 = add <4 x i32> %19, <i32 12, i32 12, i32 12, i32 12>
  %27 = sext <4 x i32> %19 to <4 x i64>
  %28 = sext <4 x i32> %24 to <4 x i64>
  %29 = sext <4 x i32> %25 to <4 x i64>
  %30 = sext <4 x i32> %26 to <4 x i64>
  %31 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, <4 x i64> %27, i32 0, i32 3
  %32 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, <4 x i64> %28, i32 0, i32 3
  %33 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, <4 x i64> %29, i32 0, i32 3
  %34 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, <4 x i64> %30, i32 0, i32 3
  %35 = tail call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %31, i32 8, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !25127
  %36 = tail call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %32, i32 8, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !25127
  %37 = tail call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %33, i32 8, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !25127
  %38 = tail call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %34, i32 8, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !25127
  %39 = icmp ugt <4 x i64> %35, %20
  %40 = icmp ugt <4 x i64> %36, %21
  %41 = icmp ugt <4 x i64> %37, %22
  %42 = icmp ugt <4 x i64> %38, %23
  %43 = select <4 x i1> %39, <4 x i64> %35, <4 x i64> %20
  %44 = select <4 x i1> %40, <4 x i64> %36, <4 x i64> %21
  %45 = select <4 x i1> %41, <4 x i64> %37, <4 x i64> %22
  %46 = select <4 x i1> %42, <4 x i64> %38, <4 x i64> %23
  %47 = add i32 %18, 16
  %48 = add <4 x i32> %19, <i32 16, i32 16, i32 16, i32 16>
  %49 = icmp eq i32 %47, %16
  br i1 %49, label %50, label %17, !llvm.loop !25166

50:                                               ; preds = %17
  %51 = icmp ugt <4 x i64> %43, %44
  %52 = select <4 x i1> %51, <4 x i64> %43, <4 x i64> %44
  %53 = icmp ugt <4 x i64> %52, %45
  %54 = select <4 x i1> %53, <4 x i64> %52, <4 x i64> %45
  %55 = icmp ugt <4 x i64> %54, %46
  %56 = select <4 x i1> %55, <4 x i64> %54, <4 x i64> %46
  %57 = shufflevector <4 x i64> %56, <4 x i64> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %58 = icmp ugt <4 x i64> %56, %57
  %59 = select <4 x i1> %58, <4 x i64> %56, <4 x i64> %57
  %60 = shufflevector <4 x i64> %59, <4 x i64> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %61 = icmp ugt <4 x i64> %59, %60
  %62 = select <4 x i1> %61, <4 x i64> %59, <4 x i64> %60
  %63 = extractelement <4 x i64> %62, i32 0
  br label %64

64:                                               ; preds = %50, %5
  %65 = phi i32 [ 0, %5 ], [ %16, %50 ]
  %66 = phi i64 [ 0, %5 ], [ %63, %50 ]
  %67 = sub i32 %3, %65
  %68 = xor i32 %65, -1
  %69 = add i32 %3, %68
  %70 = and i32 %67, 7
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %84, label %.preheader3

.preheader3:                                      ; preds = %.preheader3, %64
  %72 = phi i32 [ %80, %.preheader3 ], [ %65, %64 ]
  %73 = phi i64 [ %79, %.preheader3 ], [ %66, %64 ]
  %74 = phi i32 [ %81, %.preheader3 ], [ %70, %64 ]
  %75 = sext i32 %72 to i64
  %76 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %75, i32 0, i32 3
  %77 = load i64, i64* %76, align 8, !tbaa !25127
  %78 = icmp ugt i64 %77, %73
  %79 = select i1 %78, i64 %77, i64 %73
  %80 = add nuw i32 %72, 1
  %81 = add nsw i32 %74, -1
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %.loopexit4, label %.preheader3, !llvm.loop !25167

.loopexit4:                                       ; preds = %.preheader3
  %83 = add i32 %65, %70
  br label %84

84:                                               ; preds = %.loopexit4, %64
  %85 = phi i64 [ undef, %64 ], [ %79, %.loopexit4 ]
  %86 = phi i32 [ %65, %64 ], [ %83, %.loopexit4 ]
  %87 = phi i64 [ %66, %64 ], [ %79, %.loopexit4 ]
  %88 = icmp ult i32 %69, 7
  br i1 %88, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %.preheader, %84
  %89 = phi i32 [ %138, %.preheader ], [ %86, %84 ]
  %90 = phi i64 [ %137, %.preheader ], [ %87, %84 ]
  %91 = sext i32 %89 to i64
  %92 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %91, i32 0, i32 3
  %93 = load i64, i64* %92, align 8, !tbaa !25127
  %94 = icmp ugt i64 %93, %90
  %95 = select i1 %94, i64 %93, i64 %90
  %96 = add nuw i32 %89, 1
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %97, i32 0, i32 3
  %99 = load i64, i64* %98, align 8, !tbaa !25127
  %100 = icmp ugt i64 %99, %95
  %101 = select i1 %100, i64 %99, i64 %95
  %102 = add nuw i32 %89, 2
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %103, i32 0, i32 3
  %105 = load i64, i64* %104, align 8, !tbaa !25127
  %106 = icmp ugt i64 %105, %101
  %107 = select i1 %106, i64 %105, i64 %101
  %108 = add nuw i32 %89, 3
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %109, i32 0, i32 3
  %111 = load i64, i64* %110, align 8, !tbaa !25127
  %112 = icmp ugt i64 %111, %107
  %113 = select i1 %112, i64 %111, i64 %107
  %114 = add nuw i32 %89, 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %115, i32 0, i32 3
  %117 = load i64, i64* %116, align 8, !tbaa !25127
  %118 = icmp ugt i64 %117, %113
  %119 = select i1 %118, i64 %117, i64 %113
  %120 = add nuw i32 %89, 5
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %121, i32 0, i32 3
  %123 = load i64, i64* %122, align 8, !tbaa !25127
  %124 = icmp ugt i64 %123, %119
  %125 = select i1 %124, i64 %123, i64 %119
  %126 = add nuw i32 %89, 6
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %127, i32 0, i32 3
  %129 = load i64, i64* %128, align 8, !tbaa !25127
  %130 = icmp ugt i64 %129, %125
  %131 = select i1 %130, i64 %129, i64 %125
  %132 = add nuw i32 %89, 7
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t", %"struct.per_thread<TimestampAccumBase<per_thread>::State>::A_t"* %7, i64 %133, i32 0, i32 3
  %135 = load i64, i64* %134, align 8, !tbaa !25127
  %136 = icmp ugt i64 %135, %131
  %137 = select i1 %136, i64 %135, i64 %131
  %138 = add nuw i32 %89, 8
  %139 = icmp eq i32 %138, %3
  br i1 %139, label %.loopexit, label %.preheader, !llvm.loop !25168

.loopexit:                                        ; preds = %.preheader, %84, %1
  %140 = phi i64 [ 0, %1 ], [ %85, %84 ], [ %137, %.preheader ]
  ret i64 %140
}

define weak_odr dso_local i64 @_ZNK18AverageCounterBaseI22AverageCounterStatsIMPE6ignoreEv(%class.AverageCounterBase.23* %0) local_unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %class.AverageCounterBase.23, %class.AverageCounterBase.23* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8, !tbaa !25126
  ret i64 %3
}

